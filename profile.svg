<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="266" onload="init(evt)" viewBox="0 0 1200 266" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="266" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">C:\Users\24162\AppData\Local\Programs\Python\Python39\Scripts\py-spy.exe record -o profile.svg -- python .\Best_MA.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="255.00"> </text><svg id="frames" x="10" width="1180" total_samples="16901"><g><title>__init__ (pandas\io\parsers\c_parser_wrapper.py:69) (69 samples, 0.41%)</title><rect x="0.0533%" y="164" width="0.4083%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="69"/><text x="0.3033%" y="174.50"></text></g><g><title>_read (pandas\io\parsers\readers.py:482) (76 samples, 0.45%)</title><rect x="0.0178%" y="116" width="0.4497%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="76"/><text x="0.2678%" y="126.50"></text></g><g><title>__init__ (pandas\io\parsers\readers.py:811) (75 samples, 0.44%)</title><rect x="0.0237%" y="132" width="0.4438%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="75"/><text x="0.2737%" y="142.50"></text></g><g><title>_make_engine (pandas\io\parsers\readers.py:1040) (75 samples, 0.44%)</title><rect x="0.0237%" y="148" width="0.4438%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="75"/><text x="0.2737%" y="158.50"></text></g><g><title>read (pandas\io\parsers\c_parser_wrapper.py:223) (68 samples, 0.40%)</title><rect x="0.4852%" y="148" width="0.4023%" height="15" fill="rgb(208,68,35)" fg:x="82" fg:w="68"/><text x="0.7352%" y="158.50"></text></g><g><title>read (pandas\io\parsers\readers.py:1047) (74 samples, 0.44%)</title><rect x="0.4852%" y="132" width="0.4378%" height="15" fill="rgb(232,128,0)" fg:x="82" fg:w="74"/><text x="0.7352%" y="142.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:25) (175 samples, 1.04%)</title><rect x="0.0000%" y="68" width="1.0354%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="175"/><text x="0.2500%" y="78.50"></text></g><g><title>wrapper (pandas\util\_decorators.py:311) (172 samples, 1.02%)</title><rect x="0.0178%" y="84" width="1.0177%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="172"/><text x="0.2678%" y="94.50"></text></g><g><title>read_csv (pandas\io\parsers\readers.py:586) (172 samples, 1.02%)</title><rect x="0.0178%" y="100" width="1.0177%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="172"/><text x="0.2678%" y="110.50"></text></g><g><title>_read (pandas\io\parsers\readers.py:488) (96 samples, 0.57%)</title><rect x="0.4674%" y="116" width="0.5680%" height="15" fill="rgb(220,122,19)" fg:x="79" fg:w="96"/><text x="0.7174%" y="126.50"></text></g><g><title>read (pandas\io\parsers\readers.py:1059) (17 samples, 0.10%)</title><rect x="0.9349%" y="132" width="0.1006%" height="15" fill="rgb(250,228,42)" fg:x="158" fg:w="17"/><text x="1.1849%" y="142.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:35) (22 samples, 0.13%)</title><rect x="1.1952%" y="68" width="0.1302%" height="15" fill="rgb(240,193,28)" fg:x="202" fg:w="22"/><text x="1.4452%" y="78.50"></text></g><g><title>iterrows (pandas\core\frame.py:1262) (56 samples, 0.33%)</title><rect x="1.7750%" y="84" width="0.3313%" height="15" fill="rgb(216,20,37)" fg:x="300" fg:w="56"/><text x="2.0250%" y="94.50"></text></g><g><title>values (pandas\core\frame.py:10665) (18 samples, 0.11%)</title><rect x="1.9999%" y="100" width="0.1065%" height="15" fill="rgb(206,188,39)" fg:x="338" fg:w="18"/><text x="2.2499%" y="110.50"></text></g><g><title>as_array (pandas\core\internals\managers.py:1466) (18 samples, 0.11%)</title><rect x="1.9999%" y="116" width="0.1065%" height="15" fill="rgb(217,207,13)" fg:x="338" fg:w="18"/><text x="2.2499%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:326) (17 samples, 0.10%)</title><rect x="2.3431%" y="100" width="0.1006%" height="15" fill="rgb(231,73,38)" fg:x="396" fg:w="17"/><text x="2.5931%" y="110.50"></text></g><g><title>maybe_extract_name (pandas\core\indexes\base.py:6391) (24 samples, 0.14%)</title><rect x="2.5856%" y="116" width="0.1420%" height="15" fill="rgb(225,20,46)" fg:x="437" fg:w="24"/><text x="2.8356%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:353) (47 samples, 0.28%)</title><rect x="2.4614%" y="100" width="0.2781%" height="15" fill="rgb(210,31,41)" fg:x="416" fg:w="47"/><text x="2.7114%" y="110.50"></text></g><g><title>is_empty_data (pandas\core\construction.py:795) (24 samples, 0.14%)</title><rect x="2.8164%" y="116" width="0.1420%" height="15" fill="rgb(221,200,47)" fg:x="476" fg:w="24"/><text x="3.0664%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:355) (39 samples, 0.23%)</title><rect x="2.7395%" y="100" width="0.2308%" height="15" fill="rgb(226,26,5)" fg:x="463" fg:w="39"/><text x="2.9895%" y="110.50"></text></g><g><title>__init__ (pandas\core\series.py:368) (17 samples, 0.10%)</title><rect x="2.9939%" y="100" width="0.1006%" height="15" fill="rgb(249,33,26)" fg:x="506" fg:w="17"/><text x="3.2439%" y="110.50"></text></g><g><title>require_length_match (pandas\core\common.py:530) (26 samples, 0.15%)</title><rect x="3.4140%" y="116" width="0.1538%" height="15" fill="rgb(235,183,28)" fg:x="577" fg:w="26"/><text x="3.6640%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:430) (42 samples, 0.25%)</title><rect x="3.3430%" y="100" width="0.2485%" height="15" fill="rgb(221,5,38)" fg:x="565" fg:w="42"/><text x="3.5930%" y="110.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (58 samples, 0.34%)</title><rect x="3.8578%" y="132" width="0.3432%" height="15" fill="rgb(247,18,42)" fg:x="652" fg:w="58"/><text x="4.1078%" y="142.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:500) (87 samples, 0.51%)</title><rect x="3.7808%" y="116" width="0.5148%" height="15" fill="rgb(241,131,45)" fg:x="639" fg:w="87"/><text x="4.0308%" y="126.50"></text></g><g><title>_try_cast (pandas\core\construction.py:703) (17 samples, 0.10%)</title><rect x="4.6329%" y="132" width="0.1006%" height="15" fill="rgb(249,31,29)" fg:x="783" fg:w="17"/><text x="4.8829%" y="142.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas\core\dtypes\cast.py:1507) (36 samples, 0.21%)</title><rect x="5.0352%" y="148" width="0.2130%" height="15" fill="rgb(225,111,53)" fg:x="851" fg:w="36"/><text x="5.2852%" y="158.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas\core\dtypes\cast.py:1516) (26 samples, 0.15%)</title><rect x="5.3606%" y="148" width="0.1538%" height="15" fill="rgb(238,160,17)" fg:x="906" fg:w="26"/><text x="5.6106%" y="158.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas\core\dtypes\cast.py:1548) (103 samples, 0.61%)</title><rect x="5.5855%" y="148" width="0.6094%" height="15" fill="rgb(214,148,48)" fg:x="944" fg:w="103"/><text x="5.8355%" y="158.50"></text></g><g><title>_try_cast (pandas\core\construction.py:706) (276 samples, 1.63%)</title><rect x="4.7334%" y="132" width="1.6330%" height="15" fill="rgb(232,36,49)" fg:x="800" fg:w="276"/><text x="4.9834%" y="142.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:545) (330 samples, 1.95%)</title><rect x="4.4790%" y="116" width="1.9525%" height="15" fill="rgb(209,103,24)" fg:x="757" fg:w="330"/><text x="4.7290%" y="126.50">s..</text></g><g><title>_sanitize_ndim (pandas\core\construction.py:621) (24 samples, 0.14%)</title><rect x="6.6032%" y="132" width="0.1420%" height="15" fill="rgb(229,88,8)" fg:x="1116" fg:w="24"/><text x="6.8532%" y="142.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:576) (54 samples, 0.32%)</title><rect x="6.4316%" y="116" width="0.3195%" height="15" fill="rgb(213,181,19)" fg:x="1087" fg:w="54"/><text x="6.6816%" y="126.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:581) (27 samples, 0.16%)</title><rect x="6.8694%" y="116" width="0.1598%" height="15" fill="rgb(254,191,54)" fg:x="1161" fg:w="27"/><text x="7.1194%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:439) (571 samples, 3.38%)</title><rect x="3.6566%" y="100" width="3.3785%" height="15" fill="rgb(241,83,37)" fg:x="618" fg:w="571"/><text x="3.9066%" y="110.50">__i..</text></g><g><title>_get_deprecated_option (pandas\_config\config.py:588) (26 samples, 0.15%)</title><rect x="7.4907%" y="180" width="0.1538%" height="15" fill="rgb(233,36,39)" fg:x="1266" fg:w="26"/><text x="7.7407%" y="190.50"></text></g><g><title>_warn_if_deprecated (pandas\_config\config.py:626) (45 samples, 0.27%)</title><rect x="7.4315%" y="164" width="0.2663%" height="15" fill="rgb(226,3,54)" fg:x="1256" fg:w="45"/><text x="7.6815%" y="174.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:107) (57 samples, 0.34%)</title><rect x="7.3783%" y="148" width="0.3373%" height="15" fill="rgb(245,192,40)" fg:x="1247" fg:w="57"/><text x="7.6283%" y="158.50"></text></g><g><title>_translate_key (pandas\_config\config.py:611) (22 samples, 0.13%)</title><rect x="7.7629%" y="164" width="0.1302%" height="15" fill="rgb(238,167,29)" fg:x="1312" fg:w="22"/><text x="8.0129%" y="174.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:109) (32 samples, 0.19%)</title><rect x="7.7155%" y="148" width="0.1893%" height="15" fill="rgb(232,182,51)" fg:x="1304" fg:w="32"/><text x="7.9655%" y="158.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:97) (27 samples, 0.16%)</title><rect x="7.9167%" y="148" width="0.1598%" height="15" fill="rgb(231,60,39)" fg:x="1338" fg:w="27"/><text x="8.1667%" y="158.50"></text></g><g><title>_get_option (pandas\_config\config.py:115) (145 samples, 0.86%)</title><rect x="7.2540%" y="132" width="0.8579%" height="15" fill="rgb(208,69,12)" fg:x="1226" fg:w="145"/><text x="7.5040%" y="142.50"></text></g><g><title>_get_root (pandas\_config\config.py:566) (25 samples, 0.15%)</title><rect x="8.1711%" y="148" width="0.1479%" height="15" fill="rgb(235,93,37)" fg:x="1381" fg:w="25"/><text x="8.4211%" y="158.50"></text></g><g><title>_get_option (pandas\_config\config.py:118) (61 samples, 0.36%)</title><rect x="8.1119%" y="132" width="0.3609%" height="15" fill="rgb(213,116,39)" fg:x="1371" fg:w="61"/><text x="8.3619%" y="142.50"></text></g><g><title>__init__ (pandas\core\series.py:441) (247 samples, 1.46%)</title><rect x="7.0351%" y="100" width="1.4615%" height="15" fill="rgb(222,207,29)" fg:x="1189" fg:w="247"/><text x="7.2851%" y="110.50"></text></g><g><title>__call__ (pandas\_config\config.py:243) (223 samples, 1.32%)</title><rect x="7.1771%" y="116" width="1.3194%" height="15" fill="rgb(206,96,30)" fg:x="1213" fg:w="223"/><text x="7.4271%" y="126.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1929) (21 samples, 0.12%)</title><rect x="9.1001%" y="132" width="0.1243%" height="15" fill="rgb(218,138,4)" fg:x="1538" fg:w="21"/><text x="9.3501%" y="142.50"></text></g><g><title>extract_pandas_array (pandas\core\internals\blocks.py:1990) (26 samples, 0.15%)</title><rect x="9.2835%" y="148" width="0.1538%" height="15" fill="rgb(250,191,14)" fg:x="1569" fg:w="26"/><text x="9.5335%" y="158.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1931) (45 samples, 0.27%)</title><rect x="9.2243%" y="132" width="0.2663%" height="15" fill="rgb(239,60,40)" fg:x="1559" fg:w="45"/><text x="9.4743%" y="142.50"></text></g><g><title>check_ndim (pandas\core\internals\blocks.py:1966) (24 samples, 0.14%)</title><rect x="9.5675%" y="148" width="0.1420%" height="15" fill="rgb(206,27,48)" fg:x="1617" fg:w="24"/><text x="9.8175%" y="158.50"></text></g><g><title>check_ndim (pandas\core\internals\blocks.py:1973) (21 samples, 0.12%)</title><rect x="9.7213%" y="148" width="0.1243%" height="15" fill="rgb(225,35,8)" fg:x="1643" fg:w="21"/><text x="9.9713%" y="158.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1932) (63 samples, 0.37%)</title><rect x="9.4906%" y="132" width="0.3728%" height="15" fill="rgb(250,213,24)" fg:x="1604" fg:w="63"/><text x="9.7406%" y="142.50"></text></g><g><title>pandas_dtype (pandas\core\dtypes\common.py:1763) (29 samples, 0.17%)</title><rect x="10.1118%" y="164" width="0.1716%" height="15" fill="rgb(247,123,22)" fg:x="1709" fg:w="29"/><text x="10.3618%" y="174.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1900) (63 samples, 0.37%)</title><rect x="9.9225%" y="148" width="0.3728%" height="15" fill="rgb(231,138,38)" fg:x="1677" fg:w="63"/><text x="10.1725%" y="158.50"></text></g><g><title>is_sparse (pandas\core\dtypes\common.py:232) (85 samples, 0.50%)</title><rect x="10.3722%" y="164" width="0.5029%" height="15" fill="rgb(231,145,46)" fg:x="1753" fg:w="85"/><text x="10.6222%" y="174.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1906) (100 samples, 0.59%)</title><rect x="10.3544%" y="148" width="0.5917%" height="15" fill="rgb(251,118,11)" fg:x="1750" fg:w="100"/><text x="10.6044%" y="158.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1935) (205 samples, 1.21%)</title><rect x="9.8811%" y="132" width="1.2129%" height="15" fill="rgb(217,147,25)" fg:x="1670" fg:w="205"/><text x="10.1311%" y="142.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (58 samples, 0.34%)</title><rect x="11.1769%" y="164" width="0.3432%" height="15" fill="rgb(247,81,37)" fg:x="1889" fg:w="58"/><text x="11.4269%" y="174.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (21 samples, 0.12%)</title><rect x="11.3958%" y="180" width="0.1243%" height="15" fill="rgb(209,12,38)" fg:x="1926" fg:w="21"/><text x="11.6458%" y="190.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1870) (83 samples, 0.49%)</title><rect x="11.1295%" y="148" width="0.4911%" height="15" fill="rgb(227,1,9)" fg:x="1881" fg:w="83"/><text x="11.3795%" y="158.50"></text></g><g><title>ensure_wrapped_if_datetimelike (pandas\core\construction.py:436) (24 samples, 0.14%)</title><rect x="11.7567%" y="164" width="0.1420%" height="15" fill="rgb(248,47,43)" fg:x="1987" fg:w="24"/><text x="12.0067%" y="174.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1873) (51 samples, 0.30%)</title><rect x="11.6561%" y="148" width="0.3018%" height="15" fill="rgb(221,10,30)" fg:x="1970" fg:w="51"/><text x="11.9061%" y="158.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1937) (165 samples, 0.98%)</title><rect x="11.0940%" y="132" width="0.9763%" height="15" fill="rgb(210,229,1)" fg:x="1875" fg:w="165"/><text x="11.3440%" y="142.50"></text></g><g><title>from_array (pandas\core\internals\managers.py:1574) (585 samples, 3.46%)</title><rect x="8.7332%" y="116" width="3.4613%" height="15" fill="rgb(222,148,37)" fg:x="1476" fg:w="585"/><text x="8.9832%" y="126.50">fro..</text></g><g><title>new_block (pandas\core\internals\blocks.py:1938) (21 samples, 0.12%)</title><rect x="12.0703%" y="132" width="0.1243%" height="15" fill="rgb(234,67,33)" fg:x="2040" fg:w="21"/><text x="12.3203%" y="142.50"></text></g><g><title>__init__ (pandas\core\series.py:443) (668 samples, 3.95%)</title><rect x="8.5320%" y="100" width="3.9524%" height="15" fill="rgb(247,98,35)" fg:x="1442" fg:w="668"/><text x="8.7820%" y="110.50">__in..</text></g><g><title>from_array (pandas\core\internals\managers.py:1575) (49 samples, 0.29%)</title><rect x="12.1945%" y="116" width="0.2899%" height="15" fill="rgb(247,138,52)" fg:x="2061" fg:w="49"/><text x="12.4445%" y="126.50"></text></g><g><title>__init__ (pandas\core\generic.py:241) (20 samples, 0.12%)</title><rect x="12.6265%" y="116" width="0.1183%" height="15" fill="rgb(213,79,30)" fg:x="2134" fg:w="20"/><text x="12.8765%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:447) (159 samples, 0.94%)</title><rect x="12.4845%" y="100" width="0.9408%" height="15" fill="rgb(246,177,23)" fg:x="2110" fg:w="159"/><text x="12.7345%" y="110.50"></text></g><g><title>__init__ (pandas\core\generic.py:249) (78 samples, 0.46%)</title><rect x="12.9637%" y="116" width="0.4615%" height="15" fill="rgb(230,62,27)" fg:x="2191" fg:w="78"/><text x="13.2137%" y="126.50"></text></g><g><title>__init__ (pandas\core\flags.py:49) (20 samples, 0.12%)</title><rect x="13.3069%" y="132" width="0.1183%" height="15" fill="rgb(216,154,8)" fg:x="2249" fg:w="20"/><text x="13.5569%" y="142.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5499) (109 samples, 0.64%)</title><rect x="13.5022%" y="116" width="0.6449%" height="15" fill="rgb(244,35,45)" fg:x="2282" fg:w="109"/><text x="13.7522%" y="126.50"></text></g><g><title>name (pandas\core\series.py:625) (86 samples, 0.51%)</title><rect x="13.6382%" y="132" width="0.5088%" height="15" fill="rgb(251,115,12)" fg:x="2305" fg:w="86"/><text x="13.8882%" y="142.50"></text></g><g><title>__getattr__ (pandas\core\generic.py:5487) (37 samples, 0.22%)</title><rect x="13.9282%" y="148" width="0.2189%" height="15" fill="rgb(240,54,50)" fg:x="2354" fg:w="37"/><text x="14.1782%" y="158.50"></text></g><g><title>name (pandas\core\series.py:629) (96 samples, 0.57%)</title><rect x="14.4666%" y="132" width="0.5680%" height="15" fill="rgb(233,84,52)" fg:x="2445" fg:w="96"/><text x="14.7166%" y="142.50"></text></g><g><title>validate_all_hashable (pandas\core\dtypes\common.py:1737) (56 samples, 0.33%)</title><rect x="14.7033%" y="148" width="0.3313%" height="15" fill="rgb(207,117,47)" fg:x="2485" fg:w="56"/><text x="14.9533%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\common.py:1737) (29 samples, 0.17%)</title><rect x="14.8630%" y="164" width="0.1716%" height="15" fill="rgb(249,43,39)" fg:x="2512" fg:w="29"/><text x="15.1130%" y="174.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5509) (130 samples, 0.77%)</title><rect x="14.3305%" y="116" width="0.7692%" height="15" fill="rgb(209,38,44)" fg:x="2422" fg:w="130"/><text x="14.5805%" y="126.50"></text></g><g><title>__init__ (pandas\core\series.py:448) (288 samples, 1.70%)</title><rect x="13.4252%" y="100" width="1.7040%" height="15" fill="rgb(236,212,23)" fg:x="2269" fg:w="288"/><text x="13.6752%" y="110.50"></text></g><g><title>_set_axis (pandas\core\series.py:538) (17 samples, 0.10%)</title><rect x="15.2831%" y="116" width="0.1006%" height="15" fill="rgb(242,79,21)" fg:x="2583" fg:w="17"/><text x="15.5331%" y="126.50"></text></g><g><title>_set_axis (pandas\core\series.py:556) (17 samples, 0.10%)</title><rect x="15.3837%" y="116" width="0.1006%" height="15" fill="rgb(211,96,35)" fg:x="2600" fg:w="17"/><text x="15.6337%" y="126.50"></text></g><g><title>iterrows (pandas\core\frame.py:1263) (2,264 samples, 13.40%)</title><rect x="2.1064%" y="84" width="13.3957%" height="15" fill="rgb(253,215,40)" fg:x="356" fg:w="2264"/><text x="2.3564%" y="94.50">iterrows (pandas\cor..</text></g><g><title>__init__ (pandas\core\series.py:449) (63 samples, 0.37%)</title><rect x="15.1293%" y="100" width="0.3728%" height="15" fill="rgb(211,81,21)" fg:x="2557" fg:w="63"/><text x="15.3793%" y="110.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:43) (2,412 samples, 14.27%)</title><rect x="1.3254%" y="68" width="14.2713%" height="15" fill="rgb(208,190,38)" fg:x="224" fg:w="2412"/><text x="1.5754%" y="78.50">&lt;module&gt; (Best_MA.py:4..</text></g><g><title>__getitem__ (pandas\core\series.py:929) (18 samples, 0.11%)</title><rect x="15.7150%" y="84" width="0.1065%" height="15" fill="rgb(235,213,38)" fg:x="2656" fg:w="18"/><text x="15.9650%" y="94.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (24 samples, 0.14%)</title><rect x="16.2890%" y="132" width="0.1420%" height="15" fill="rgb(237,122,38)" fg:x="2753" fg:w="24"/><text x="16.5390%" y="142.50"></text></g><g><title>is_floating (pandas\core\indexes\base.py:2172) (19 samples, 0.11%)</title><rect x="16.3186%" y="148" width="0.1124%" height="15" fill="rgb(244,218,35)" fg:x="2758" fg:w="19"/><text x="16.5686%" y="158.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (52 samples, 0.31%)</title><rect x="16.2653%" y="116" width="0.3077%" height="15" fill="rgb(240,68,47)" fg:x="2749" fg:w="52"/><text x="16.5153%" y="126.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5701) (24 samples, 0.14%)</title><rect x="16.4310%" y="132" width="0.1420%" height="15" fill="rgb(210,16,53)" fg:x="2777" fg:w="24"/><text x="16.6810%" y="142.50"></text></g><g><title>_get_value (pandas\core\series.py:1051) (129 samples, 0.76%)</title><rect x="16.1292%" y="100" width="0.7633%" height="15" fill="rgb(235,124,12)" fg:x="2726" fg:w="129"/><text x="16.3792%" y="110.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (51 samples, 0.30%)</title><rect x="16.5907%" y="116" width="0.3018%" height="15" fill="rgb(224,169,11)" fg:x="2804" fg:w="51"/><text x="16.8407%" y="126.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:44) (323 samples, 1.91%)</title><rect x="15.5967%" y="68" width="1.9111%" height="15" fill="rgb(250,166,2)" fg:x="2636" fg:w="323"/><text x="15.8467%" y="78.50">&lt;..</text></g><g><title>__getitem__ (pandas\core\series.py:942) (254 samples, 1.50%)</title><rect x="16.0050%" y="84" width="1.5029%" height="15" fill="rgb(242,216,29)" fg:x="2705" fg:w="254"/><text x="16.2550%" y="94.50"></text></g><g><title>_get_value (pandas\core\series.py:1052) (104 samples, 0.62%)</title><rect x="16.8925%" y="100" width="0.6153%" height="15" fill="rgb(230,116,27)" fg:x="2855" fg:w="104"/><text x="17.1425%" y="110.50"></text></g><g><title>_get_values_for_loc (pandas\core\indexes\base.py:5184) (69 samples, 0.41%)</title><rect x="17.0996%" y="116" width="0.4083%" height="15" fill="rgb(228,99,48)" fg:x="2890" fg:w="69"/><text x="17.3496%" y="126.50"></text></g><g><title>_values (pandas\core\series.py:706) (40 samples, 0.24%)</title><rect x="17.2712%" y="132" width="0.2367%" height="15" fill="rgb(253,11,6)" fg:x="2919" fg:w="40"/><text x="17.5212%" y="142.50"></text></g><g><title>internal_values (pandas\core\internals\managers.py:1676) (30 samples, 0.18%)</title><rect x="17.3303%" y="148" width="0.1775%" height="15" fill="rgb(247,143,39)" fg:x="2929" fg:w="30"/><text x="17.5803%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\series.py:929) (20 samples, 0.12%)</title><rect x="17.6321%" y="84" width="0.1183%" height="15" fill="rgb(236,97,10)" fg:x="2980" fg:w="20"/><text x="17.8821%" y="94.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (17 samples, 0.10%)</title><rect x="18.0640%" y="132" width="0.1006%" height="15" fill="rgb(233,208,19)" fg:x="3053" fg:w="17"/><text x="18.3140%" y="142.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (33 samples, 0.20%)</title><rect x="18.0285%" y="116" width="0.1953%" height="15" fill="rgb(216,164,2)" fg:x="3047" fg:w="33"/><text x="18.2785%" y="126.50"></text></g><g><title>_get_value (pandas\core\series.py:1051) (68 samples, 0.40%)</title><rect x="17.9516%" y="100" width="0.4023%" height="15" fill="rgb(220,129,5)" fg:x="3034" fg:w="68"/><text x="18.2016%" y="110.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (22 samples, 0.13%)</title><rect x="18.2238%" y="116" width="0.1302%" height="15" fill="rgb(242,17,10)" fg:x="3080" fg:w="22"/><text x="18.4738%" y="126.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:45) (209 samples, 1.24%)</title><rect x="17.5078%" y="68" width="1.2366%" height="15" fill="rgb(242,107,0)" fg:x="2959" fg:w="209"/><text x="17.7578%" y="78.50"></text></g><g><title>__getitem__ (pandas\core\series.py:942) (147 samples, 0.87%)</title><rect x="17.8747%" y="84" width="0.8698%" height="15" fill="rgb(251,28,31)" fg:x="3021" fg:w="147"/><text x="18.1247%" y="94.50"></text></g><g><title>_get_value (pandas\core\series.py:1052) (66 samples, 0.39%)</title><rect x="18.3539%" y="100" width="0.3905%" height="15" fill="rgb(233,223,10)" fg:x="3102" fg:w="66"/><text x="18.6039%" y="110.50"></text></g><g><title>_get_values_for_loc (pandas\core\indexes\base.py:5184) (48 samples, 0.28%)</title><rect x="18.4604%" y="116" width="0.2840%" height="15" fill="rgb(215,21,27)" fg:x="3120" fg:w="48"/><text x="18.7104%" y="126.50"></text></g><g><title>_values (pandas\core\series.py:706) (28 samples, 0.17%)</title><rect x="18.5788%" y="132" width="0.1657%" height="15" fill="rgb(232,23,21)" fg:x="3140" fg:w="28"/><text x="18.8288%" y="142.50"></text></g><g><title>internal_values (pandas\core\internals\managers.py:1676) (18 samples, 0.11%)</title><rect x="18.6380%" y="148" width="0.1065%" height="15" fill="rgb(244,5,23)" fg:x="3150" fg:w="18"/><text x="18.8880%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\indexing.py:930) (23 samples, 0.14%)</title><rect x="19.6024%" y="84" width="0.1361%" height="15" fill="rgb(226,81,46)" fg:x="3313" fg:w="23"/><text x="19.8524%" y="94.50"></text></g><g><title>_get_axis (pandas\core\generic.py:558) (31 samples, 0.18%)</title><rect x="20.0462%" y="116" width="0.1834%" height="15" fill="rgb(247,70,30)" fg:x="3388" fg:w="31"/><text x="20.2962%" y="126.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1137) (81 samples, 0.48%)</title><rect x="19.9278%" y="100" width="0.4793%" height="15" fill="rgb(212,68,19)" fg:x="3368" fg:w="81"/><text x="20.1778%" y="110.50"></text></g><g><title>_get_axis (pandas\core\generic.py:560) (22 samples, 0.13%)</title><rect x="20.2769%" y="116" width="0.1302%" height="15" fill="rgb(240,187,13)" fg:x="3427" fg:w="22"/><text x="20.5269%" y="126.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1138) (20 samples, 0.12%)</title><rect x="20.4071%" y="100" width="0.1183%" height="15" fill="rgb(223,113,26)" fg:x="3449" fg:w="20"/><text x="20.6571%" y="110.50"></text></g><g><title>is_bool_indexer (pandas\core\common.py:128) (69 samples, 0.41%)</title><rect x="20.7148%" y="116" width="0.4083%" height="15" fill="rgb(206,192,2)" fg:x="3501" fg:w="69"/><text x="20.9648%" y="126.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (18 samples, 0.11%)</title><rect x="21.0165%" y="132" width="0.1065%" height="15" fill="rgb(241,108,4)" fg:x="3552" fg:w="18"/><text x="21.2665%" y="142.50"></text></g><g><title>is_bool_indexer (pandas\core\common.py:129) (37 samples, 0.22%)</title><rect x="21.1230%" y="116" width="0.2189%" height="15" fill="rgb(247,173,49)" fg:x="3570" fg:w="37"/><text x="21.3730%" y="126.50"></text></g><g><title>is_array_like (pandas\core\dtypes\inference.py:213) (22 samples, 0.13%)</title><rect x="21.2118%" y="132" width="0.1302%" height="15" fill="rgb(224,114,35)" fg:x="3585" fg:w="22"/><text x="21.4618%" y="142.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1143) (135 samples, 0.80%)</title><rect x="20.5964%" y="100" width="0.7988%" height="15" fill="rgb(245,159,27)" fg:x="3481" fg:w="135"/><text x="20.8464%" y="110.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1145) (37 samples, 0.22%)</title><rect x="21.3952%" y="100" width="0.2189%" height="15" fill="rgb(245,172,44)" fg:x="3616" fg:w="37"/><text x="21.6452%" y="110.50"></text></g><g><title>is_list_like_indexer (pandas\core\indexers.py:79) (27 samples, 0.16%)</title><rect x="21.4544%" y="116" width="0.1598%" height="15" fill="rgb(236,23,11)" fg:x="3626" fg:w="27"/><text x="21.7044%" y="126.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1163) (33 samples, 0.20%)</title><rect x="21.6141%" y="100" width="0.1953%" height="15" fill="rgb(205,117,38)" fg:x="3653" fg:w="33"/><text x="21.8641%" y="110.50"></text></g><g><title>xs (pandas\core\generic.py:3734) (18 samples, 0.11%)</title><rect x="22.0993%" y="132" width="0.1065%" height="15" fill="rgb(237,72,25)" fg:x="3735" fg:w="18"/><text x="22.3493%" y="142.50"></text></g><g><title>xs (pandas\core\generic.py:3735) (40 samples, 0.24%)</title><rect x="22.2058%" y="132" width="0.2367%" height="15" fill="rgb(244,70,9)" fg:x="3753" fg:w="40"/><text x="22.4558%" y="142.50"></text></g><g><title>_protect_consolidate (pandas\core\generic.py:5550) (19 samples, 0.11%)</title><rect x="22.8685%" y="164" width="0.1124%" height="15" fill="rgb(217,125,39)" fg:x="3865" fg:w="19"/><text x="23.1185%" y="174.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5499) (21 samples, 0.12%)</title><rect x="23.2886%" y="196" width="0.1243%" height="15" fill="rgb(235,36,10)" fg:x="3936" fg:w="21"/><text x="23.5386%" y="206.50"></text></g><g><title>consolidate (pandas\core\internals\managers.py:614) (25 samples, 0.15%)</title><rect x="23.5016%" y="196" width="0.1479%" height="15" fill="rgb(251,123,47)" fg:x="3972" fg:w="25"/><text x="23.7516%" y="206.50"></text></g><g><title>_protect_consolidate (pandas\core\generic.py:5553) (106 samples, 0.63%)</title><rect x="23.0282%" y="164" width="0.6272%" height="15" fill="rgb(221,13,13)" fg:x="3892" fg:w="106"/><text x="23.2782%" y="174.50"></text></g><g><title>f (pandas\core\generic.py:5563) (97 samples, 0.57%)</title><rect x="23.0815%" y="180" width="0.5739%" height="15" fill="rgb(238,131,9)" fg:x="3901" fg:w="97"/><text x="23.3315%" y="190.50"></text></g><g><title>xs (pandas\core\generic.py:3766) (188 samples, 1.11%)</title><rect x="22.5904%" y="132" width="1.1124%" height="15" fill="rgb(211,50,8)" fg:x="3818" fg:w="188"/><text x="22.8404%" y="142.50"></text></g><g><title>_consolidate_inplace (pandas\core\generic.py:5565) (155 samples, 0.92%)</title><rect x="22.7856%" y="148" width="0.9171%" height="15" fill="rgb(245,182,24)" fg:x="3851" fg:w="155"/><text x="23.0356%" y="158.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (29 samples, 0.17%)</title><rect x="23.8743%" y="164" width="0.1716%" height="15" fill="rgb(242,14,37)" fg:x="4035" fg:w="29"/><text x="24.1243%" y="174.50"></text></g><g><title>is_floating (pandas\core\indexes\base.py:2172) (22 samples, 0.13%)</title><rect x="23.9157%" y="180" width="0.1302%" height="15" fill="rgb(246,228,12)" fg:x="4042" fg:w="22"/><text x="24.1657%" y="190.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (62 samples, 0.37%)</title><rect x="23.8270%" y="148" width="0.3668%" height="15" fill="rgb(213,55,15)" fg:x="4027" fg:w="62"/><text x="24.0770%" y="158.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5701) (25 samples, 0.15%)</title><rect x="24.0459%" y="164" width="0.1479%" height="15" fill="rgb(209,9,3)" fg:x="4064" fg:w="25"/><text x="24.2959%" y="174.50"></text></g><g><title>xs (pandas\core\generic.py:3776) (132 samples, 0.78%)</title><rect x="23.7382%" y="132" width="0.7810%" height="15" fill="rgb(230,59,30)" fg:x="4012" fg:w="132"/><text x="23.9882%" y="142.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (55 samples, 0.33%)</title><rect x="24.1938%" y="148" width="0.3254%" height="15" fill="rgb(209,121,21)" fg:x="4089" fg:w="55"/><text x="24.4438%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3790) (31 samples, 0.18%)</title><rect x="24.6790%" y="132" width="0.1834%" height="15" fill="rgb(220,109,13)" fg:x="4171" fg:w="31"/><text x="24.9290%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (pandas\core\internals\managers.py:954) (60 samples, 0.36%)</title><rect x="25.1819%" y="164" width="0.3550%" height="15" fill="rgb(232,18,1)" fg:x="4256" fg:w="60"/><text x="25.4319%" y="174.50"></text></g><g><title>get_dtype (pandas\core\dtypes\common.py:1566) (23 samples, 0.14%)</title><rect x="26.3594%" y="228" width="0.1361%" height="15" fill="rgb(215,41,42)" fg:x="4455" fg:w="23"/><text x="26.6094%" y="238.50"></text></g><g><title>is_dtype_equal (pandas\core\dtypes\common.py:615) (36 samples, 0.21%)</title><rect x="26.2884%" y="212" width="0.2130%" height="15" fill="rgb(224,123,36)" fg:x="4443" fg:w="36"/><text x="26.5384%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1814) (160 samples, 0.95%)</title><rect x="25.7263%" y="180" width="0.9467%" height="15" fill="rgb(240,125,3)" fg:x="4348" fg:w="160"/><text x="25.9763%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1814) (105 samples, 0.62%)</title><rect x="26.0517%" y="196" width="0.6213%" height="15" fill="rgb(205,98,50)" fg:x="4403" fg:w="105"/><text x="26.3017%" y="206.50"></text></g><g><title>is_dtype_equal (pandas\core\dtypes\common.py:617) (20 samples, 0.12%)</title><rect x="26.5546%" y="212" width="0.1183%" height="15" fill="rgb(205,185,37)" fg:x="4488" fg:w="20"/><text x="26.8046%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1818) (67 samples, 0.40%)</title><rect x="26.6730%" y="180" width="0.3964%" height="15" fill="rgb(238,207,15)" fg:x="4508" fg:w="67"/><text x="26.9230%" y="190.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1820) (65 samples, 0.38%)</title><rect x="27.0694%" y="180" width="0.3846%" height="15" fill="rgb(213,199,42)" fg:x="4575" fg:w="65"/><text x="27.3194%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1820) (29 samples, 0.17%)</title><rect x="27.2824%" y="196" width="0.1716%" height="15" fill="rgb(235,201,11)" fg:x="4611" fg:w="29"/><text x="27.5324%" y="206.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1829) (56 samples, 0.33%)</title><rect x="27.4540%" y="180" width="0.3313%" height="15" fill="rgb(207,46,11)" fg:x="4640" fg:w="56"/><text x="27.7040%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1829) (33 samples, 0.20%)</title><rect x="27.5901%" y="196" width="0.1953%" height="15" fill="rgb(241,35,35)" fg:x="4663" fg:w="33"/><text x="27.8401%" y="206.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1831) (36 samples, 0.21%)</title><rect x="27.7853%" y="180" width="0.2130%" height="15" fill="rgb(243,32,47)" fg:x="4696" fg:w="36"/><text x="28.0353%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1831) (23 samples, 0.14%)</title><rect x="27.8623%" y="196" width="0.1361%" height="15" fill="rgb(247,202,23)" fg:x="4709" fg:w="23"/><text x="28.1123%" y="206.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1307) (35 samples, 0.21%)</title><rect x="28.3001%" y="212" width="0.2071%" height="15" fill="rgb(219,102,11)" fg:x="4783" fg:w="35"/><text x="28.5501%" y="222.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1311) (20 samples, 0.12%)</title><rect x="28.5072%" y="212" width="0.1183%" height="15" fill="rgb(243,110,44)" fg:x="4818" fg:w="20"/><text x="28.7572%" y="222.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1315) (74 samples, 0.44%)</title><rect x="28.6255%" y="212" width="0.4378%" height="15" fill="rgb(222,74,54)" fg:x="4838" fg:w="74"/><text x="28.8755%" y="222.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (21 samples, 0.12%)</title><rect x="28.9391%" y="228" width="0.1243%" height="15" fill="rgb(216,99,12)" fg:x="4891" fg:w="21"/><text x="29.1891%" y="238.50"></text></g><g><title>is_extension_array_dtype (pandas\core\dtypes\common.py:1466) (17 samples, 0.10%)</title><rect x="29.2468%" y="228" width="0.1006%" height="15" fill="rgb(226,22,26)" fg:x="4943" fg:w="17"/><text x="29.4968%" y="238.50"></text></g><g><title>is_extension_array_dtype (pandas\core\dtypes\common.py:1468) (29 samples, 0.17%)</title><rect x="29.3474%" y="228" width="0.1716%" height="15" fill="rgb(217,163,10)" fg:x="4960" fg:w="29"/><text x="29.5974%" y="238.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1322) (81 samples, 0.48%)</title><rect x="29.0634%" y="212" width="0.4793%" height="15" fill="rgb(213,25,53)" fg:x="4912" fg:w="81"/><text x="29.3134%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1836) (308 samples, 1.82%)</title><rect x="27.9983%" y="180" width="1.8224%" height="15" fill="rgb(252,105,26)" fg:x="4732" fg:w="308"/><text x="28.2483%" y="190.50">f..</text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1836) (284 samples, 1.68%)</title><rect x="28.1403%" y="196" width="1.6804%" height="15" fill="rgb(220,39,43)" fg:x="4756" fg:w="284"/><text x="28.3903%" y="206.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1325) (47 samples, 0.28%)</title><rect x="29.5426%" y="212" width="0.2781%" height="15" fill="rgb(229,68,48)" fg:x="4993" fg:w="47"/><text x="29.7926%" y="222.50"></text></g><g><title>find_common_type (numpy\core\numerictypes.py:651) (46 samples, 0.27%)</title><rect x="29.9746%" y="196" width="0.2722%" height="15" fill="rgb(252,8,32)" fg:x="5066" fg:w="46"/><text x="30.2246%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (numpy\core\numerictypes.py:651) (34 samples, 0.20%)</title><rect x="30.0456%" y="212" width="0.2012%" height="15" fill="rgb(223,20,43)" fg:x="5078" fg:w="34"/><text x="30.2956%" y="222.50"></text></g><g><title>find_common_type (numpy\core\numerictypes.py:652) (17 samples, 0.10%)</title><rect x="30.2467%" y="196" width="0.1006%" height="15" fill="rgb(229,81,49)" fg:x="5112" fg:w="17"/><text x="30.4967%" y="206.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:582) (33 samples, 0.20%)</title><rect x="30.5367%" y="212" width="0.1953%" height="15" fill="rgb(236,28,36)" fg:x="5161" fg:w="33"/><text x="30.7867%" y="222.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:583) (248 samples, 1.47%)</title><rect x="30.7319%" y="212" width="1.4674%" height="15" fill="rgb(249,185,26)" fg:x="5194" fg:w="248"/><text x="30.9819%" y="222.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:584) (637 samples, 3.77%)</title><rect x="32.1993%" y="212" width="3.7690%" height="15" fill="rgb(249,174,33)" fg:x="5442" fg:w="637"/><text x="32.4493%" y="222.50">_can..</text></g><g><title>&lt;listcomp&gt; (numpy\core\numerictypes.py:584) (404 samples, 2.39%)</title><rect x="33.5779%" y="228" width="2.3904%" height="15" fill="rgb(233,201,37)" fg:x="5675" fg:w="404"/><text x="33.8279%" y="238.50">&lt;l..</text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:585) (25 samples, 0.15%)</title><rect x="35.9683%" y="212" width="0.1479%" height="15" fill="rgb(221,78,26)" fg:x="6079" fg:w="25"/><text x="36.2183%" y="222.50"></text></g><g><title>find_common_type (numpy\core\numerictypes.py:654) (1,015 samples, 6.01%)</title><rect x="30.3473%" y="196" width="6.0056%" height="15" fill="rgb(250,127,30)" fg:x="5129" fg:w="1015"/><text x="30.5973%" y="206.50">find_com..</text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:587) (39 samples, 0.23%)</title><rect x="36.1221%" y="212" width="0.2308%" height="15" fill="rgb(230,49,44)" fg:x="6105" fg:w="39"/><text x="36.3721%" y="222.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:954) (1,932 samples, 11.43%)</title><rect x="25.0459%" y="148" width="11.4313%" height="15" fill="rgb(229,67,23)" fg:x="4233" fg:w="1932"/><text x="25.2959%" y="158.50">fast_xs (pandas\c..</text></g><g><title>interleaved_dtype (pandas\core\internals\base.py:161) (1,844 samples, 10.91%)</title><rect x="25.5665%" y="164" width="10.9106%" height="15" fill="rgb(249,83,47)" fg:x="4321" fg:w="1844"/><text x="25.8165%" y="174.50">interleaved_dtyp..</text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1846) (1,125 samples, 6.66%)</title><rect x="29.8207%" y="180" width="6.6564%" height="15" fill="rgb(215,43,3)" fg:x="5040" fg:w="1125"/><text x="30.0707%" y="190.50">find_comm..</text></g><g><title>fast_xs (pandas\core\internals\managers.py:956) (65 samples, 0.38%)</title><rect x="36.4771%" y="148" width="0.3846%" height="15" fill="rgb(238,154,13)" fg:x="6165" fg:w="65"/><text x="36.7271%" y="158.50"></text></g><g><title>__len__ (pandas\core\internals\base.py:35) (46 samples, 0.27%)</title><rect x="36.5896%" y="164" width="0.2722%" height="15" fill="rgb(219,56,2)" fg:x="6184" fg:w="46"/><text x="36.8396%" y="174.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:962) (87 samples, 0.51%)</title><rect x="36.9150%" y="148" width="0.5148%" height="15" fill="rgb(233,0,4)" fg:x="6239" fg:w="87"/><text x="37.1650%" y="158.50"></text></g><g><title>ensure_wrapped_if_datetimelike (pandas\core\construction.py:436) (22 samples, 0.13%)</title><rect x="37.5303%" y="164" width="0.1302%" height="15" fill="rgb(235,30,7)" fg:x="6343" fg:w="22"/><text x="37.7803%" y="174.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:964) (47 samples, 0.28%)</title><rect x="37.4297%" y="148" width="0.2781%" height="15" fill="rgb(250,79,13)" fg:x="6326" fg:w="47"/><text x="37.6797%" y="158.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:969) (320 samples, 1.89%)</title><rect x="37.8025%" y="148" width="1.8934%" height="15" fill="rgb(211,146,34)" fg:x="6389" fg:w="320"/><text x="38.0525%" y="158.50">f..</text></g><g><title>fast_xs (pandas\core\internals\managers.py:970) (272 samples, 1.61%)</title><rect x="39.6959%" y="148" width="1.6094%" height="15" fill="rgb(228,22,38)" fg:x="6709" fg:w="272"/><text x="39.9459%" y="158.50"></text></g><g><title>iget (pandas\core\internals\blocks.py:350) (115 samples, 0.68%)</title><rect x="40.6248%" y="164" width="0.6804%" height="15" fill="rgb(235,168,5)" fg:x="6866" fg:w="115"/><text x="40.8748%" y="174.50"></text></g><g><title>xs (pandas\core\generic.py:3796) (2,789 samples, 16.50%)</title><rect x="24.8624%" y="132" width="16.5020%" height="15" fill="rgb(221,155,16)" fg:x="4202" fg:w="2789"/><text x="25.1124%" y="142.50">xs (pandas\core\generic.p..</text></g><g><title>__init__ (pandas\core\series.py:353) (60 samples, 0.36%)</title><rect x="41.6898%" y="148" width="0.3550%" height="15" fill="rgb(215,215,53)" fg:x="7046" fg:w="60"/><text x="41.9398%" y="158.50"></text></g><g><title>maybe_extract_name (pandas\core\indexes\base.py:6391) (29 samples, 0.17%)</title><rect x="41.8733%" y="164" width="0.1716%" height="15" fill="rgb(223,4,10)" fg:x="7077" fg:w="29"/><text x="42.1233%" y="174.50"></text></g><g><title>is_hashable (pandas\core\dtypes\inference.py:352) (19 samples, 0.11%)</title><rect x="41.9324%" y="180" width="0.1124%" height="15" fill="rgb(234,103,6)" fg:x="7087" fg:w="19"/><text x="42.1824%" y="190.50"></text></g><g><title>is_empty_data (pandas\core\construction.py:795) (20 samples, 0.12%)</title><rect x="42.0804%" y="164" width="0.1183%" height="15" fill="rgb(227,97,0)" fg:x="7112" fg:w="20"/><text x="42.3304%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:355) (29 samples, 0.17%)</title><rect x="42.0448%" y="148" width="0.1716%" height="15" fill="rgb(234,150,53)" fg:x="7106" fg:w="29"/><text x="42.2948%" y="158.50"></text></g><g><title>__init__ (pandas\core\series.py:368) (28 samples, 0.17%)</title><rect x="42.2283%" y="148" width="0.1657%" height="15" fill="rgb(228,201,54)" fg:x="7137" fg:w="28"/><text x="42.4783%" y="158.50"></text></g><g><title>_validate_dtype (pandas\core\generic.py:442) (35 samples, 0.21%)</title><rect x="42.5714%" y="164" width="0.2071%" height="15" fill="rgb(222,22,37)" fg:x="7195" fg:w="35"/><text x="42.8214%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:373) (74 samples, 0.44%)</title><rect x="42.4117%" y="148" width="0.4378%" height="15" fill="rgb(237,53,32)" fg:x="7168" fg:w="74"/><text x="42.6617%" y="158.50"></text></g><g><title>require_length_match (pandas\core\common.py:530) (21 samples, 0.12%)</title><rect x="43.1572%" y="164" width="0.1243%" height="15" fill="rgb(233,25,53)" fg:x="7294" fg:w="21"/><text x="43.4072%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:430) (34 samples, 0.20%)</title><rect x="43.0980%" y="148" width="0.2012%" height="15" fill="rgb(210,40,34)" fg:x="7284" fg:w="34"/><text x="43.3480%" y="158.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:496) (19 samples, 0.11%)</title><rect x="43.4945%" y="164" width="0.1124%" height="15" fill="rgb(241,220,44)" fg:x="7351" fg:w="19"/><text x="43.7445%" y="174.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (47 samples, 0.28%)</title><rect x="43.6720%" y="180" width="0.2781%" height="15" fill="rgb(235,28,35)" fg:x="7381" fg:w="47"/><text x="43.9220%" y="190.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:500) (74 samples, 0.44%)</title><rect x="43.6069%" y="164" width="0.4378%" height="15" fill="rgb(210,56,17)" fg:x="7370" fg:w="74"/><text x="43.8569%" y="174.50"></text></g><g><title>_is_dtype_type (pandas\core\dtypes\common.py:1597) (18 samples, 0.11%)</title><rect x="44.6719%" y="196" width="0.1065%" height="15" fill="rgb(224,130,29)" fg:x="7550" fg:w="18"/><text x="44.9219%" y="206.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:520) (93 samples, 0.55%)</title><rect x="44.2932%" y="164" width="0.5503%" height="15" fill="rgb(235,212,8)" fg:x="7486" fg:w="93"/><text x="44.5432%" y="174.50"></text></g><g><title>is_float_dtype (pandas\core\dtypes\common.py:1261) (82 samples, 0.49%)</title><rect x="44.3583%" y="180" width="0.4852%" height="15" fill="rgb(223,33,50)" fg:x="7497" fg:w="82"/><text x="44.6083%" y="190.50"></text></g><g><title>_try_cast (pandas\core\construction.py:735) (54 samples, 0.32%)</title><rect x="44.9678%" y="180" width="0.3195%" height="15" fill="rgb(219,149,13)" fg:x="7600" fg:w="54"/><text x="45.2178%" y="190.50"></text></g><g><title>is_object_dtype (pandas\core\dtypes\common.py:187) (44 samples, 0.26%)</title><rect x="45.0269%" y="196" width="0.2603%" height="15" fill="rgb(250,156,29)" fg:x="7610" fg:w="44"/><text x="45.2769%" y="206.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:545) (139 samples, 0.82%)</title><rect x="44.8435%" y="164" width="0.8224%" height="15" fill="rgb(216,193,19)" fg:x="7579" fg:w="139"/><text x="45.0935%" y="174.50"></text></g><g><title>_try_cast (pandas\core\construction.py:739) (63 samples, 0.37%)</title><rect x="45.2932%" y="180" width="0.3728%" height="15" fill="rgb(216,135,14)" fg:x="7655" fg:w="63"/><text x="45.5432%" y="190.50"></text></g><g><title>_sanitize_ndim (pandas\core\construction.py:621) (21 samples, 0.12%)</title><rect x="45.8553%" y="180" width="0.1243%" height="15" fill="rgb(241,47,5)" fg:x="7750" fg:w="21"/><text x="46.1053%" y="190.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:576) (54 samples, 0.32%)</title><rect x="45.6659%" y="164" width="0.3195%" height="15" fill="rgb(233,42,35)" fg:x="7718" fg:w="54"/><text x="45.9159%" y="174.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:581) (23 samples, 0.14%)</title><rect x="46.0860%" y="164" width="0.1361%" height="15" fill="rgb(231,13,6)" fg:x="7789" fg:w="23"/><text x="46.3360%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:439) (482 samples, 2.85%)</title><rect x="43.3761%" y="148" width="2.8519%" height="15" fill="rgb(207,181,40)" fg:x="7331" fg:w="482"/><text x="43.6261%" y="158.50">__..</text></g><g><title>_get_deprecated_option (pandas\_config\config.py:588) (19 samples, 0.11%)</title><rect x="46.6955%" y="228" width="0.1124%" height="15" fill="rgb(254,173,49)" fg:x="7892" fg:w="19"/><text x="46.9455%" y="238.50"></text></g><g><title>_warn_if_deprecated (pandas\_config\config.py:626) (41 samples, 0.24%)</title><rect x="46.6481%" y="212" width="0.2426%" height="15" fill="rgb(221,1,38)" fg:x="7884" fg:w="41"/><text x="46.8981%" y="222.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:107) (50 samples, 0.30%)</title><rect x="46.6126%" y="196" width="0.2958%" height="15" fill="rgb(206,124,46)" fg:x="7878" fg:w="50"/><text x="46.8626%" y="206.50"></text></g><g><title>_translate_key (pandas\_config\config.py:611) (25 samples, 0.15%)</title><rect x="46.9617%" y="212" width="0.1479%" height="15" fill="rgb(249,21,11)" fg:x="7937" fg:w="25"/><text x="47.2117%" y="222.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:109) (35 samples, 0.21%)</title><rect x="46.9085%" y="196" width="0.2071%" height="15" fill="rgb(222,201,40)" fg:x="7928" fg:w="35"/><text x="47.1585%" y="206.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:97) (27 samples, 0.16%)</title><rect x="47.1333%" y="196" width="0.1598%" height="15" fill="rgb(235,61,29)" fg:x="7966" fg:w="27"/><text x="47.3833%" y="206.50"></text></g><g><title>_get_option (pandas\_config\config.py:115) (138 samples, 0.82%)</title><rect x="46.5120%" y="180" width="0.8165%" height="15" fill="rgb(219,207,3)" fg:x="7861" fg:w="138"/><text x="46.7620%" y="190.50"></text></g><g><title>_get_root (pandas\_config\config.py:566) (23 samples, 0.14%)</title><rect x="47.4173%" y="196" width="0.1361%" height="15" fill="rgb(222,56,46)" fg:x="8014" fg:w="23"/><text x="47.6673%" y="206.50"></text></g><g><title>_get_root (pandas\_config\config.py:568) (22 samples, 0.13%)</title><rect x="47.5771%" y="196" width="0.1302%" height="15" fill="rgb(239,76,54)" fg:x="8041" fg:w="22"/><text x="47.8271%" y="206.50"></text></g><g><title>_get_option (pandas\_config\config.py:118) (85 samples, 0.50%)</title><rect x="47.3286%" y="180" width="0.5029%" height="15" fill="rgb(231,124,27)" fg:x="7999" fg:w="85"/><text x="47.5786%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:441) (282 samples, 1.67%)</title><rect x="46.2280%" y="148" width="1.6685%" height="15" fill="rgb(249,195,6)" fg:x="7813" fg:w="282"/><text x="46.4780%" y="158.50"></text></g><g><title>__call__ (pandas\_config\config.py:243) (252 samples, 1.49%)</title><rect x="46.4055%" y="164" width="1.4910%" height="15" fill="rgb(237,174,47)" fg:x="7843" fg:w="252"/><text x="46.6555%" y="174.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1929) (28 samples, 0.17%)</title><rect x="48.3877%" y="180" width="0.1657%" height="15" fill="rgb(206,201,31)" fg:x="8178" fg:w="28"/><text x="48.6377%" y="190.50"></text></g><g><title>extract_pandas_array (pandas\core\internals\blocks.py:1990) (21 samples, 0.12%)</title><rect x="48.6066%" y="196" width="0.1243%" height="15" fill="rgb(231,57,52)" fg:x="8215" fg:w="21"/><text x="48.8566%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1931) (44 samples, 0.26%)</title><rect x="48.5533%" y="180" width="0.2603%" height="15" fill="rgb(248,177,22)" fg:x="8206" fg:w="44"/><text x="48.8033%" y="190.50"></text></g><g><title>check_ndim (pandas\core\internals\blocks.py:1966) (19 samples, 0.11%)</title><rect x="48.9143%" y="196" width="0.1124%" height="15" fill="rgb(215,211,37)" fg:x="8267" fg:w="19"/><text x="49.1643%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1932) (59 samples, 0.35%)</title><rect x="48.8137%" y="180" width="0.3491%" height="15" fill="rgb(241,128,51)" fg:x="8250" fg:w="59"/><text x="49.0637%" y="190.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1900) (49 samples, 0.29%)</title><rect x="49.2338%" y="196" width="0.2899%" height="15" fill="rgb(227,165,31)" fg:x="8321" fg:w="49"/><text x="49.4838%" y="206.50"></text></g><g><title>is_sparse (pandas\core\dtypes\common.py:232) (88 samples, 0.52%)</title><rect x="49.6598%" y="212" width="0.5207%" height="15" fill="rgb(228,167,24)" fg:x="8393" fg:w="88"/><text x="49.9098%" y="222.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1906) (109 samples, 0.64%)</title><rect x="49.5947%" y="196" width="0.6449%" height="15" fill="rgb(228,143,12)" fg:x="8382" fg:w="109"/><text x="49.8447%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1935) (220 samples, 1.30%)</title><rect x="49.1924%" y="180" width="1.3017%" height="15" fill="rgb(249,149,8)" fg:x="8314" fg:w="220"/><text x="49.4424%" y="190.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (59 samples, 0.35%)</title><rect x="50.5651%" y="212" width="0.3491%" height="15" fill="rgb(243,35,44)" fg:x="8546" fg:w="59"/><text x="50.8151%" y="222.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1870) (78 samples, 0.46%)</title><rect x="50.5236%" y="196" width="0.4615%" height="15" fill="rgb(246,89,9)" fg:x="8539" fg:w="78"/><text x="50.7736%" y="206.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1873) (28 samples, 0.17%)</title><rect x="51.0206%" y="196" width="0.1657%" height="15" fill="rgb(233,213,13)" fg:x="8623" fg:w="28"/><text x="51.2706%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1937) (133 samples, 0.79%)</title><rect x="50.4941%" y="180" width="0.7869%" height="15" fill="rgb(233,141,41)" fg:x="8534" fg:w="133"/><text x="50.7441%" y="190.50"></text></g><g><title>from_array (pandas\core\internals\managers.py:1574) (586 samples, 3.47%)</title><rect x="48.0208%" y="164" width="3.4673%" height="15" fill="rgb(239,167,4)" fg:x="8116" fg:w="586"/><text x="48.2708%" y="174.50">fro..</text></g><g><title>new_block (pandas\core\internals\blocks.py:1938) (35 samples, 0.21%)</title><rect x="51.2810%" y="180" width="0.2071%" height="15" fill="rgb(209,217,16)" fg:x="8667" fg:w="35"/><text x="51.5310%" y="190.50"></text></g><g><title>__init__ (pandas\core\internals\managers.py:1557) (18 samples, 0.11%)</title><rect x="51.7898%" y="180" width="0.1065%" height="15" fill="rgb(219,88,35)" fg:x="8753" fg:w="18"/><text x="52.0398%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:443) (683 samples, 4.04%)</title><rect x="47.9143%" y="148" width="4.0412%" height="15" fill="rgb(220,193,23)" fg:x="8098" fg:w="683"/><text x="48.1643%" y="158.50">__in..</text></g><g><title>from_array (pandas\core\internals\managers.py:1575) (79 samples, 0.47%)</title><rect x="51.4881%" y="164" width="0.4674%" height="15" fill="rgb(230,90,52)" fg:x="8702" fg:w="79"/><text x="51.7381%" y="174.50"></text></g><g><title>__init__ (pandas\core\generic.py:241) (43 samples, 0.25%)</title><rect x="52.1448%" y="164" width="0.2544%" height="15" fill="rgb(252,106,19)" fg:x="8813" fg:w="43"/><text x="52.3948%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:447) (219 samples, 1.30%)</title><rect x="51.9555%" y="148" width="1.2958%" height="15" fill="rgb(206,74,20)" fg:x="8781" fg:w="219"/><text x="52.2055%" y="158.50"></text></g><g><title>__init__ (pandas\core\generic.py:249) (100 samples, 0.59%)</title><rect x="52.6596%" y="164" width="0.5917%" height="15" fill="rgb(230,138,44)" fg:x="8900" fg:w="100"/><text x="52.9096%" y="174.50"></text></g><g><title>__init__ (pandas\core\flags.py:49) (41 samples, 0.24%)</title><rect x="53.0087%" y="180" width="0.2426%" height="15" fill="rgb(235,182,43)" fg:x="8959" fg:w="41"/><text x="53.2587%" y="190.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5499) (124 samples, 0.73%)</title><rect x="53.3637%" y="164" width="0.7337%" height="15" fill="rgb(242,16,51)" fg:x="9019" fg:w="124"/><text x="53.6137%" y="174.50"></text></g><g><title>name (pandas\core\series.py:625) (91 samples, 0.54%)</title><rect x="53.5590%" y="180" width="0.5384%" height="15" fill="rgb(248,9,4)" fg:x="9052" fg:w="91"/><text x="53.8090%" y="190.50"></text></g><g><title>__getattr__ (pandas\core\generic.py:5487) (40 samples, 0.24%)</title><rect x="53.8607%" y="196" width="0.2367%" height="15" fill="rgb(210,31,22)" fg:x="9103" fg:w="40"/><text x="54.1107%" y="206.50"></text></g><g><title>name (pandas\core\series.py:629) (102 samples, 0.60%)</title><rect x="54.3636%" y="180" width="0.6035%" height="15" fill="rgb(239,54,39)" fg:x="9188" fg:w="102"/><text x="54.6136%" y="190.50"></text></g><g><title>validate_all_hashable (pandas\core\dtypes\common.py:1737) (70 samples, 0.41%)</title><rect x="54.5530%" y="196" width="0.4142%" height="15" fill="rgb(230,99,41)" fg:x="9220" fg:w="70"/><text x="54.8030%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\common.py:1737) (32 samples, 0.19%)</title><rect x="54.7778%" y="212" width="0.1893%" height="15" fill="rgb(253,106,12)" fg:x="9258" fg:w="32"/><text x="55.0278%" y="222.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5509) (137 samples, 0.81%)</title><rect x="54.2453%" y="164" width="0.8106%" height="15" fill="rgb(213,46,41)" fg:x="9168" fg:w="137"/><text x="54.4953%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:448) (308 samples, 1.82%)</title><rect x="53.2513%" y="148" width="1.8224%" height="15" fill="rgb(215,133,35)" fg:x="9000" fg:w="308"/><text x="53.5013%" y="158.50">_..</text></g><g><title>_set_axis (pandas\core\series.py:538) (19 samples, 0.11%)</title><rect x="55.2275%" y="164" width="0.1124%" height="15" fill="rgb(213,28,5)" fg:x="9334" fg:w="19"/><text x="55.4775%" y="174.50"></text></g><g><title>xs (pandas\core\generic.py:3798) (2,378 samples, 14.07%)</title><rect x="41.3644%" y="132" width="14.0702%" height="15" fill="rgb(215,77,49)" fg:x="6991" fg:w="2378"/><text x="41.6144%" y="142.50">xs (pandas\core\gener..</text></g><g><title>__init__ (pandas\core\series.py:449) (61 samples, 0.36%)</title><rect x="55.0737%" y="148" width="0.3609%" height="15" fill="rgb(248,100,22)" fg:x="9308" fg:w="61"/><text x="55.3237%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3800) (27 samples, 0.16%)</title><rect x="55.4346%" y="132" width="0.1598%" height="15" fill="rgb(208,67,9)" fg:x="9369" fg:w="27"/><text x="55.6846%" y="142.50"></text></g><g><title>__getitem__ (pandas\core\indexes\base.py:4603) (25 samples, 0.15%)</title><rect x="55.8014%" y="148" width="0.1479%" height="15" fill="rgb(219,133,21)" fg:x="9431" fg:w="25"/><text x="56.0514%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3801) (75 samples, 0.44%)</title><rect x="55.5943%" y="132" width="0.4438%" height="15" fill="rgb(246,46,29)" fg:x="9396" fg:w="75"/><text x="55.8443%" y="142.50"></text></g><g><title>_is_view (pandas\core\generic.py:4007) (75 samples, 0.44%)</title><rect x="56.3754%" y="148" width="0.4438%" height="15" fill="rgb(246,185,52)" fg:x="9528" fg:w="75"/><text x="56.6254%" y="158.50"></text></g><g><title>is_view (pandas\core\internals\managers.py:494) (55 samples, 0.33%)</title><rect x="56.4937%" y="164" width="0.3254%" height="15" fill="rgb(252,136,11)" fg:x="9548" fg:w="55"/><text x="56.7437%" y="174.50"></text></g><g><title>__getitem__ (pandas\core\indexing.py:931) (6,316 samples, 37.37%)</title><rect x="19.7385%" y="84" width="37.3706%" height="15" fill="rgb(219,138,53)" fg:x="3336" fg:w="6316"/><text x="19.9885%" y="94.50">__getitem__ (pandas\core\indexing.py:931)</text></g><g><title>_getitem_axis (pandas\core\indexing.py:1164) (5,966 samples, 35.30%)</title><rect x="21.8094%" y="100" width="35.2997%" height="15" fill="rgb(211,51,23)" fg:x="3686" fg:w="5966"/><text x="22.0594%" y="110.50">_getitem_axis (pandas\core\indexing.py:1164)</text></g><g><title>_get_label (pandas\core\indexing.py:1113) (5,946 samples, 35.18%)</title><rect x="21.9277%" y="116" width="35.1814%" height="15" fill="rgb(247,221,28)" fg:x="3706" fg:w="5946"/><text x="22.1777%" y="126.50">_get_label (pandas\core\indexing.py:1113)</text></g><g><title>xs (pandas\core\generic.py:3814) (173 samples, 1.02%)</title><rect x="56.0854%" y="132" width="1.0236%" height="15" fill="rgb(251,222,45)" fg:x="9479" fg:w="173"/><text x="56.3354%" y="142.50"></text></g><g><title>_set_is_copy (pandas\core\generic.py:3843) (45 samples, 0.27%)</title><rect x="56.8428%" y="148" width="0.2663%" height="15" fill="rgb(217,162,53)" fg:x="9607" fg:w="45"/><text x="57.0928%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\series.py:929) (25 samples, 0.15%)</title><rect x="57.1150%" y="84" width="0.1479%" height="15" fill="rgb(229,93,14)" fg:x="9653" fg:w="25"/><text x="57.3650%" y="94.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (36 samples, 0.21%)</title><rect x="57.8131%" y="132" width="0.2130%" height="15" fill="rgb(209,67,49)" fg:x="9771" fg:w="36"/><text x="58.0631%" y="142.50"></text></g><g><title>is_floating (pandas\core\indexes\base.py:2172) (21 samples, 0.12%)</title><rect x="57.9019%" y="148" width="0.1243%" height="15" fill="rgb(213,87,29)" fg:x="9786" fg:w="21"/><text x="58.1519%" y="158.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (79 samples, 0.47%)</title><rect x="57.7421%" y="116" width="0.4674%" height="15" fill="rgb(205,151,52)" fg:x="9759" fg:w="79"/><text x="57.9921%" y="126.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5701) (31 samples, 0.18%)</title><rect x="58.0262%" y="132" width="0.1834%" height="15" fill="rgb(253,215,39)" fg:x="9807" fg:w="31"/><text x="58.2762%" y="142.50"></text></g><g><title>_get_value (pandas\core\series.py:1051) (165 samples, 0.98%)</title><rect x="57.5232%" y="100" width="0.9763%" height="15" fill="rgb(221,220,41)" fg:x="9722" fg:w="165"/><text x="57.7732%" y="110.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (49 samples, 0.29%)</title><rect x="58.2096%" y="116" width="0.2899%" height="15" fill="rgb(218,133,21)" fg:x="9838" fg:w="49"/><text x="58.4596%" y="126.50"></text></g><g><title>__getitem__ (pandas\core\series.py:942) (276 samples, 1.63%)</title><rect x="57.4345%" y="84" width="1.6330%" height="15" fill="rgb(221,193,43)" fg:x="9707" fg:w="276"/><text x="57.6845%" y="94.50"></text></g><g><title>_get_value (pandas\core\series.py:1052) (96 samples, 0.57%)</title><rect x="58.4995%" y="100" width="0.5680%" height="15" fill="rgb(240,128,52)" fg:x="9887" fg:w="96"/><text x="58.7495%" y="110.50"></text></g><g><title>_get_values_for_loc (pandas\core\indexes\base.py:5184) (70 samples, 0.41%)</title><rect x="58.6533%" y="116" width="0.4142%" height="15" fill="rgb(253,114,12)" fg:x="9913" fg:w="70"/><text x="58.9033%" y="126.50"></text></g><g><title>_values (pandas\core\series.py:706) (42 samples, 0.25%)</title><rect x="58.8190%" y="132" width="0.2485%" height="15" fill="rgb(215,223,47)" fg:x="9941" fg:w="42"/><text x="59.0690%" y="142.50"></text></g><g><title>internal_values (pandas\core\internals\managers.py:1676) (25 samples, 0.15%)</title><rect x="58.9196%" y="148" width="0.1479%" height="15" fill="rgb(248,225,23)" fg:x="9958" fg:w="25"/><text x="59.1696%" y="158.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:46) (6,830 samples, 40.41%)</title><rect x="18.7445%" y="68" width="40.4118%" height="15" fill="rgb(250,108,0)" fg:x="3168" fg:w="6830"/><text x="18.9945%" y="78.50">&lt;module&gt; (Best_MA.py:46)</text></g><g><title>__getitem__ (pandas\core\indexing.py:930) (26 samples, 0.15%)</title><rect x="60.1740%" y="84" width="0.1538%" height="15" fill="rgb(228,208,7)" fg:x="10170" fg:w="26"/><text x="60.4240%" y="94.50"></text></g><g><title>_get_axis (pandas\core\generic.py:558) (30 samples, 0.18%)</title><rect x="60.6473%" y="116" width="0.1775%" height="15" fill="rgb(244,45,10)" fg:x="10250" fg:w="30"/><text x="60.8973%" y="126.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1137) (74 samples, 0.44%)</title><rect x="60.5230%" y="100" width="0.4378%" height="15" fill="rgb(207,125,25)" fg:x="10229" fg:w="74"/><text x="60.7730%" y="110.50"></text></g><g><title>is_bool_indexer (pandas\core\common.py:128) (63 samples, 0.37%)</title><rect x="61.1739%" y="116" width="0.3728%" height="15" fill="rgb(210,195,18)" fg:x="10339" fg:w="63"/><text x="61.4239%" y="126.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (21 samples, 0.12%)</title><rect x="61.4224%" y="132" width="0.1243%" height="15" fill="rgb(249,80,12)" fg:x="10381" fg:w="21"/><text x="61.6724%" y="142.50"></text></g><g><title>is_bool_indexer (pandas\core\common.py:129) (43 samples, 0.25%)</title><rect x="61.5467%" y="116" width="0.2544%" height="15" fill="rgb(221,65,9)" fg:x="10402" fg:w="43"/><text x="61.7967%" y="126.50"></text></g><g><title>is_array_like (pandas\core\dtypes\inference.py:213) (33 samples, 0.20%)</title><rect x="61.6058%" y="132" width="0.1953%" height="15" fill="rgb(235,49,36)" fg:x="10412" fg:w="33"/><text x="61.8558%" y="142.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1143) (132 samples, 0.78%)</title><rect x="61.0911%" y="100" width="0.7810%" height="15" fill="rgb(225,32,20)" fg:x="10325" fg:w="132"/><text x="61.3411%" y="110.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1145) (35 samples, 0.21%)</title><rect x="61.8721%" y="100" width="0.2071%" height="15" fill="rgb(215,141,46)" fg:x="10457" fg:w="35"/><text x="62.1221%" y="110.50"></text></g><g><title>is_list_like_indexer (pandas\core\indexers.py:79) (24 samples, 0.14%)</title><rect x="61.9372%" y="116" width="0.1420%" height="15" fill="rgb(250,160,47)" fg:x="10468" fg:w="24"/><text x="62.1872%" y="126.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1163) (19 samples, 0.11%)</title><rect x="62.0792%" y="100" width="0.1124%" height="15" fill="rgb(216,222,40)" fg:x="10492" fg:w="19"/><text x="62.3292%" y="110.50"></text></g><g><title>xs (pandas\core\generic.py:3734) (18 samples, 0.11%)</title><rect x="62.4815%" y="132" width="0.1065%" height="15" fill="rgb(234,217,39)" fg:x="10560" fg:w="18"/><text x="62.7315%" y="142.50"></text></g><g><title>_get_axis (pandas\core\generic.py:558) (19 samples, 0.11%)</title><rect x="62.6235%" y="148" width="0.1124%" height="15" fill="rgb(207,178,40)" fg:x="10584" fg:w="19"/><text x="62.8735%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3735) (37 samples, 0.22%)</title><rect x="62.5880%" y="132" width="0.2189%" height="15" fill="rgb(221,136,13)" fg:x="10578" fg:w="37"/><text x="62.8380%" y="142.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5500) (23 samples, 0.14%)</title><rect x="63.5525%" y="196" width="0.1361%" height="15" fill="rgb(249,199,10)" fg:x="10741" fg:w="23"/><text x="63.8025%" y="206.50"></text></g><g><title>_protect_consolidate (pandas\core\generic.py:5553) (93 samples, 0.55%)</title><rect x="63.2862%" y="164" width="0.5503%" height="15" fill="rgb(249,222,13)" fg:x="10696" fg:w="93"/><text x="63.5362%" y="174.50"></text></g><g><title>f (pandas\core\generic.py:5563) (85 samples, 0.50%)</title><rect x="63.3335%" y="180" width="0.5029%" height="15" fill="rgb(244,185,38)" fg:x="10704" fg:w="85"/><text x="63.5835%" y="190.50"></text></g><g><title>consolidate (pandas\core\internals\managers.py:614) (25 samples, 0.15%)</title><rect x="63.6885%" y="196" width="0.1479%" height="15" fill="rgb(236,202,9)" fg:x="10764" fg:w="25"/><text x="63.9385%" y="206.50"></text></g><g><title>xs (pandas\core\generic.py:3766) (168 samples, 0.99%)</title><rect x="62.9016%" y="132" width="0.9940%" height="15" fill="rgb(250,229,37)" fg:x="10631" fg:w="168"/><text x="63.1516%" y="142.50"></text></g><g><title>_consolidate_inplace (pandas\core\generic.py:5565) (140 samples, 0.83%)</title><rect x="63.0673%" y="148" width="0.8284%" height="15" fill="rgb(206,174,23)" fg:x="10659" fg:w="140"/><text x="63.3173%" y="158.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (25 samples, 0.15%)</title><rect x="64.0968%" y="164" width="0.1479%" height="15" fill="rgb(211,33,43)" fg:x="10833" fg:w="25"/><text x="64.3468%" y="174.50"></text></g><g><title>is_floating (pandas\core\indexes\base.py:2172) (20 samples, 0.12%)</title><rect x="64.1264%" y="180" width="0.1183%" height="15" fill="rgb(245,58,50)" fg:x="10838" fg:w="20"/><text x="64.3764%" y="190.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (48 samples, 0.28%)</title><rect x="64.0554%" y="148" width="0.2840%" height="15" fill="rgb(244,68,36)" fg:x="10826" fg:w="48"/><text x="64.3054%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3776) (112 samples, 0.66%)</title><rect x="63.9725%" y="132" width="0.6627%" height="15" fill="rgb(232,229,15)" fg:x="10812" fg:w="112"/><text x="64.2225%" y="142.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (49 samples, 0.29%)</title><rect x="64.3453%" y="148" width="0.2899%" height="15" fill="rgb(254,30,23)" fg:x="10875" fg:w="49"/><text x="64.5953%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3790) (28 samples, 0.17%)</title><rect x="64.8009%" y="132" width="0.1657%" height="15" fill="rgb(235,160,14)" fg:x="10952" fg:w="28"/><text x="65.0509%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (pandas\core\internals\managers.py:954) (53 samples, 0.31%)</title><rect x="65.2979%" y="164" width="0.3136%" height="15" fill="rgb(212,155,44)" fg:x="11036" fg:w="53"/><text x="65.5479%" y="174.50"></text></g><g><title>get_dtype (pandas\core\dtypes\common.py:1566) (36 samples, 0.21%)</title><rect x="66.4044%" y="228" width="0.2130%" height="15" fill="rgb(226,2,50)" fg:x="11223" fg:w="36"/><text x="66.6544%" y="238.50"></text></g><g><title>is_dtype_equal (pandas\core\dtypes\common.py:615) (50 samples, 0.30%)</title><rect x="66.3334%" y="212" width="0.2958%" height="15" fill="rgb(234,177,6)" fg:x="11211" fg:w="50"/><text x="66.5834%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1814) (193 samples, 1.14%)</title><rect x="65.7594%" y="180" width="1.1419%" height="15" fill="rgb(217,24,9)" fg:x="11114" fg:w="193"/><text x="66.0094%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1814) (136 samples, 0.80%)</title><rect x="66.0967%" y="196" width="0.8047%" height="15" fill="rgb(220,13,46)" fg:x="11171" fg:w="136"/><text x="66.3467%" y="206.50"></text></g><g><title>is_dtype_equal (pandas\core\dtypes\common.py:617) (30 samples, 0.18%)</title><rect x="66.7239%" y="212" width="0.1775%" height="15" fill="rgb(239,221,27)" fg:x="11277" fg:w="30"/><text x="66.9739%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1818) (91 samples, 0.54%)</title><rect x="66.9014%" y="180" width="0.5384%" height="15" fill="rgb(222,198,25)" fg:x="11307" fg:w="91"/><text x="67.1514%" y="190.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1820) (60 samples, 0.36%)</title><rect x="67.4398%" y="180" width="0.3550%" height="15" fill="rgb(211,99,13)" fg:x="11398" fg:w="60"/><text x="67.6898%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1820) (21 samples, 0.12%)</title><rect x="67.6706%" y="196" width="0.1243%" height="15" fill="rgb(232,111,31)" fg:x="11437" fg:w="21"/><text x="67.9206%" y="206.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1829) (61 samples, 0.36%)</title><rect x="67.7948%" y="180" width="0.3609%" height="15" fill="rgb(245,82,37)" fg:x="11458" fg:w="61"/><text x="68.0448%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1829) (38 samples, 0.22%)</title><rect x="67.9309%" y="196" width="0.2248%" height="15" fill="rgb(227,149,46)" fg:x="11481" fg:w="38"/><text x="68.1809%" y="206.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1831) (41 samples, 0.24%)</title><rect x="68.1557%" y="180" width="0.2426%" height="15" fill="rgb(218,36,50)" fg:x="11519" fg:w="41"/><text x="68.4057%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1831) (22 samples, 0.13%)</title><rect x="68.2681%" y="196" width="0.1302%" height="15" fill="rgb(226,80,48)" fg:x="11538" fg:w="22"/><text x="68.5181%" y="206.50"></text></g><g><title>get_dtype (pandas\core\dtypes\common.py:1566) (22 samples, 0.13%)</title><rect x="68.8066%" y="228" width="0.1302%" height="15" fill="rgb(238,224,15)" fg:x="11629" fg:w="22"/><text x="69.0566%" y="238.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1307) (46 samples, 0.27%)</title><rect x="68.6764%" y="212" width="0.2722%" height="15" fill="rgb(241,136,10)" fg:x="11607" fg:w="46"/><text x="68.9264%" y="222.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1315) (72 samples, 0.43%)</title><rect x="69.0196%" y="212" width="0.4260%" height="15" fill="rgb(208,32,45)" fg:x="11665" fg:w="72"/><text x="69.2696%" y="222.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (22 samples, 0.13%)</title><rect x="69.3154%" y="228" width="0.1302%" height="15" fill="rgb(207,135,9)" fg:x="11715" fg:w="22"/><text x="69.5654%" y="238.50"></text></g><g><title>is_extension_array_dtype (pandas\core\dtypes\common.py:1465) (20 samples, 0.12%)</title><rect x="69.5284%" y="228" width="0.1183%" height="15" fill="rgb(206,86,44)" fg:x="11751" fg:w="20"/><text x="69.7784%" y="238.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1322) (65 samples, 0.38%)</title><rect x="69.4456%" y="212" width="0.3846%" height="15" fill="rgb(245,177,15)" fg:x="11737" fg:w="65"/><text x="69.6956%" y="222.50"></text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1836) (275 samples, 1.63%)</title><rect x="68.3983%" y="180" width="1.6271%" height="15" fill="rgb(206,64,50)" fg:x="11560" fg:w="275"/><text x="68.6483%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\cast.py:1836) (256 samples, 1.51%)</title><rect x="68.5107%" y="196" width="1.5147%" height="15" fill="rgb(234,36,40)" fg:x="11579" fg:w="256"/><text x="68.7607%" y="206.50"></text></g><g><title>is_bool_dtype (pandas\core\dtypes\common.py:1325) (33 samples, 0.20%)</title><rect x="69.8302%" y="212" width="0.1953%" height="15" fill="rgb(213,64,8)" fg:x="11802" fg:w="33"/><text x="70.0802%" y="222.50"></text></g><g><title>find_common_type (numpy\core\numerictypes.py:651) (59 samples, 0.35%)</title><rect x="70.2148%" y="196" width="0.3491%" height="15" fill="rgb(210,75,36)" fg:x="11867" fg:w="59"/><text x="70.4648%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (numpy\core\numerictypes.py:651) (41 samples, 0.24%)</title><rect x="70.3213%" y="212" width="0.2426%" height="15" fill="rgb(229,88,21)" fg:x="11885" fg:w="41"/><text x="70.5713%" y="222.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:582) (41 samples, 0.24%)</title><rect x="70.7828%" y="212" width="0.2426%" height="15" fill="rgb(252,204,47)" fg:x="11963" fg:w="41"/><text x="71.0328%" y="222.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:583) (237 samples, 1.40%)</title><rect x="71.0254%" y="212" width="1.4023%" height="15" fill="rgb(208,77,27)" fg:x="12004" fg:w="237"/><text x="71.2754%" y="222.50"></text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:584) (626 samples, 3.70%)</title><rect x="72.4277%" y="212" width="3.7039%" height="15" fill="rgb(221,76,26)" fg:x="12241" fg:w="626"/><text x="72.6777%" y="222.50">_can..</text></g><g><title>&lt;listcomp&gt; (numpy\core\numerictypes.py:584) (361 samples, 2.14%)</title><rect x="73.9956%" y="228" width="2.1360%" height="15" fill="rgb(225,139,18)" fg:x="12506" fg:w="361"/><text x="74.2456%" y="238.50">&lt;..</text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:585) (31 samples, 0.18%)</title><rect x="76.1316%" y="212" width="0.1834%" height="15" fill="rgb(230,137,11)" fg:x="12867" fg:w="31"/><text x="76.3816%" y="222.50"></text></g><g><title>find_common_type (numpy\core\numerictypes.py:654) (1,007 samples, 5.96%)</title><rect x="70.6290%" y="196" width="5.9582%" height="15" fill="rgb(212,28,1)" fg:x="11937" fg:w="1007"/><text x="70.8790%" y="206.50">find_com..</text></g><g><title>_can_coerce_all (numpy\core\numerictypes.py:587) (43 samples, 0.25%)</title><rect x="76.3328%" y="212" width="0.2544%" height="15" fill="rgb(248,164,17)" fg:x="12901" fg:w="43"/><text x="76.5828%" y="222.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:954) (1,958 samples, 11.59%)</title><rect x="65.1263%" y="148" width="11.5851%" height="15" fill="rgb(222,171,42)" fg:x="11007" fg:w="1958"/><text x="65.3763%" y="158.50">fast_xs (pandas\c..</text></g><g><title>interleaved_dtype (pandas\core\internals\base.py:161) (1,871 samples, 11.07%)</title><rect x="65.6411%" y="164" width="11.0704%" height="15" fill="rgb(243,84,45)" fg:x="11094" fg:w="1871"/><text x="65.8911%" y="174.50">interleaved_dtyp..</text></g><g><title>find_common_type (pandas\core\dtypes\cast.py:1846) (1,128 samples, 6.67%)</title><rect x="70.0373%" y="180" width="6.6742%" height="15" fill="rgb(252,49,23)" fg:x="11837" fg:w="1128"/><text x="70.2873%" y="190.50">find_comm..</text></g><g><title>fast_xs (pandas\core\internals\managers.py:956) (66 samples, 0.39%)</title><rect x="76.7114%" y="148" width="0.3905%" height="15" fill="rgb(215,19,7)" fg:x="12965" fg:w="66"/><text x="76.9614%" y="158.50"></text></g><g><title>__len__ (pandas\core\internals\base.py:35) (49 samples, 0.29%)</title><rect x="76.8120%" y="164" width="0.2899%" height="15" fill="rgb(238,81,41)" fg:x="12982" fg:w="49"/><text x="77.0620%" y="174.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:962) (83 samples, 0.49%)</title><rect x="77.1256%" y="148" width="0.4911%" height="15" fill="rgb(210,199,37)" fg:x="13035" fg:w="83"/><text x="77.3756%" y="158.50"></text></g><g><title>ensure_wrapped_if_datetimelike (pandas\core\construction.py:436) (23 samples, 0.14%)</title><rect x="77.6995%" y="164" width="0.1361%" height="15" fill="rgb(244,192,49)" fg:x="13132" fg:w="23"/><text x="77.9495%" y="174.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:964) (48 samples, 0.28%)</title><rect x="77.6167%" y="148" width="0.2840%" height="15" fill="rgb(226,211,11)" fg:x="13118" fg:w="48"/><text x="77.8667%" y="158.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:969) (288 samples, 1.70%)</title><rect x="77.9362%" y="148" width="1.7040%" height="15" fill="rgb(236,162,54)" fg:x="13172" fg:w="288"/><text x="78.1862%" y="158.50"></text></g><g><title>mgr_locs (pandas\core\internals\blocks.py:240) (19 samples, 0.11%)</title><rect x="79.5278%" y="164" width="0.1124%" height="15" fill="rgb(220,229,9)" fg:x="13441" fg:w="19"/><text x="79.7778%" y="174.50"></text></g><g><title>fast_xs (pandas\core\internals\managers.py:970) (219 samples, 1.30%)</title><rect x="79.6403%" y="148" width="1.2958%" height="15" fill="rgb(250,87,22)" fg:x="13460" fg:w="219"/><text x="79.8903%" y="158.50"></text></g><g><title>iget (pandas\core\internals\blocks.py:350) (108 samples, 0.64%)</title><rect x="80.2970%" y="164" width="0.6390%" height="15" fill="rgb(239,43,17)" fg:x="13571" fg:w="108"/><text x="80.5470%" y="174.50"></text></g><g><title>xs (pandas\core\generic.py:3796) (2,708 samples, 16.02%)</title><rect x="64.9666%" y="132" width="16.0227%" height="15" fill="rgb(231,177,25)" fg:x="10980" fg:w="2708"/><text x="65.2166%" y="142.50">xs (pandas\core\generic.p..</text></g><g><title>maybe_extract_name (pandas\core\indexes\base.py:6391) (20 samples, 0.12%)</title><rect x="81.5573%" y="164" width="0.1183%" height="15" fill="rgb(219,179,1)" fg:x="13784" fg:w="20"/><text x="81.8073%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:353) (50 samples, 0.30%)</title><rect x="81.3857%" y="148" width="0.2958%" height="15" fill="rgb(238,219,53)" fg:x="13755" fg:w="50"/><text x="81.6357%" y="158.50"></text></g><g><title>is_empty_data (pandas\core\construction.py:795) (29 samples, 0.17%)</title><rect x="81.7526%" y="164" width="0.1716%" height="15" fill="rgb(232,167,36)" fg:x="13817" fg:w="29"/><text x="82.0026%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:355) (45 samples, 0.27%)</title><rect x="81.6816%" y="148" width="0.2663%" height="15" fill="rgb(244,19,51)" fg:x="13805" fg:w="45"/><text x="81.9316%" y="158.50"></text></g><g><title>__init__ (pandas\core\series.py:368) (21 samples, 0.12%)</title><rect x="81.9715%" y="148" width="0.1243%" height="15" fill="rgb(224,6,22)" fg:x="13854" fg:w="21"/><text x="82.2215%" y="158.50"></text></g><g><title>_validate_dtype (pandas\core\generic.py:442) (34 samples, 0.20%)</title><rect x="82.2673%" y="164" width="0.2012%" height="15" fill="rgb(224,145,5)" fg:x="13904" fg:w="34"/><text x="82.5173%" y="174.50"></text></g><g><title>pandas_dtype (pandas\core\dtypes\common.py:1763) (18 samples, 0.11%)</title><rect x="82.3620%" y="180" width="0.1065%" height="15" fill="rgb(234,130,49)" fg:x="13920" fg:w="18"/><text x="82.6120%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:373) (68 samples, 0.40%)</title><rect x="82.1194%" y="148" width="0.4023%" height="15" fill="rgb(254,6,2)" fg:x="13879" fg:w="68"/><text x="82.3694%" y="158.50"></text></g><g><title>require_length_match (pandas\core\common.py:530) (18 samples, 0.11%)</title><rect x="82.8768%" y="164" width="0.1065%" height="15" fill="rgb(208,96,46)" fg:x="14007" fg:w="18"/><text x="83.1268%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:430) (36 samples, 0.21%)</title><rect x="82.7939%" y="148" width="0.2130%" height="15" fill="rgb(239,3,39)" fg:x="13993" fg:w="36"/><text x="83.0439%" y="158.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (60 samples, 0.36%)</title><rect x="83.3678%" y="180" width="0.3550%" height="15" fill="rgb(233,210,1)" fg:x="14090" fg:w="60"/><text x="83.6178%" y="190.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:500) (96 samples, 0.57%)</title><rect x="83.2850%" y="164" width="0.5680%" height="15" fill="rgb(244,137,37)" fg:x="14076" fg:w="96"/><text x="83.5350%" y="174.50"></text></g><g><title>extract_array (pandas\core\construction.py:425) (22 samples, 0.13%)</title><rect x="83.7229%" y="180" width="0.1302%" height="15" fill="rgb(240,136,2)" fg:x="14150" fg:w="22"/><text x="83.9729%" y="190.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:502) (17 samples, 0.10%)</title><rect x="83.8530%" y="164" width="0.1006%" height="15" fill="rgb(239,18,37)" fg:x="14172" fg:w="17"/><text x="84.1030%" y="174.50"></text></g><g><title>_is_dtype_type (pandas\core\dtypes\common.py:1597) (25 samples, 0.15%)</title><rect x="84.4506%" y="196" width="0.1479%" height="15" fill="rgb(218,185,22)" fg:x="14273" fg:w="25"/><text x="84.7006%" y="206.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:520) (97 samples, 0.57%)</title><rect x="84.0838%" y="164" width="0.5739%" height="15" fill="rgb(225,218,4)" fg:x="14211" fg:w="97"/><text x="84.3338%" y="174.50"></text></g><g><title>is_float_dtype (pandas\core\dtypes\common.py:1261) (69 samples, 0.41%)</title><rect x="84.2495%" y="180" width="0.4083%" height="15" fill="rgb(230,182,32)" fg:x="14239" fg:w="69"/><text x="84.4995%" y="190.50"></text></g><g><title>_try_cast (pandas\core\construction.py:735) (52 samples, 0.31%)</title><rect x="84.8175%" y="180" width="0.3077%" height="15" fill="rgb(242,56,43)" fg:x="14335" fg:w="52"/><text x="85.0675%" y="190.50"></text></g><g><title>is_object_dtype (pandas\core\dtypes\common.py:187) (47 samples, 0.28%)</title><rect x="84.8471%" y="196" width="0.2781%" height="15" fill="rgb(233,99,24)" fg:x="14340" fg:w="47"/><text x="85.0971%" y="206.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:545) (146 samples, 0.86%)</title><rect x="84.6577%" y="164" width="0.8639%" height="15" fill="rgb(234,209,42)" fg:x="14308" fg:w="146"/><text x="84.9077%" y="174.50"></text></g><g><title>_try_cast (pandas\core\construction.py:739) (66 samples, 0.39%)</title><rect x="85.1311%" y="180" width="0.3905%" height="15" fill="rgb(227,7,12)" fg:x="14388" fg:w="66"/><text x="85.3811%" y="190.50"></text></g><g><title>_sanitize_ndim (pandas\core\construction.py:616) (17 samples, 0.10%)</title><rect x="85.6281%" y="180" width="0.1006%" height="15" fill="rgb(245,203,43)" fg:x="14472" fg:w="17"/><text x="85.8781%" y="190.50"></text></g><g><title>_sanitize_ndim (pandas\core\construction.py:621) (28 samples, 0.17%)</title><rect x="85.7523%" y="180" width="0.1657%" height="15" fill="rgb(238,205,33)" fg:x="14493" fg:w="28"/><text x="86.0023%" y="190.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:576) (69 samples, 0.41%)</title><rect x="85.5216%" y="164" width="0.4083%" height="15" fill="rgb(231,56,7)" fg:x="14454" fg:w="69"/><text x="85.7716%" y="174.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:581) (24 samples, 0.14%)</title><rect x="86.0482%" y="164" width="0.1420%" height="15" fill="rgb(244,186,29)" fg:x="14543" fg:w="24"/><text x="86.2982%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:439) (526 samples, 3.11%)</title><rect x="83.0898%" y="148" width="3.1122%" height="15" fill="rgb(234,111,31)" fg:x="14043" fg:w="526"/><text x="83.3398%" y="158.50">__i..</text></g><g><title>_get_deprecated_option (pandas\_config\config.py:588) (23 samples, 0.14%)</title><rect x="86.7641%" y="228" width="0.1361%" height="15" fill="rgb(241,149,10)" fg:x="14664" fg:w="23"/><text x="87.0141%" y="238.50"></text></g><g><title>_warn_if_deprecated (pandas\_config\config.py:626) (49 samples, 0.29%)</title><rect x="86.6931%" y="212" width="0.2899%" height="15" fill="rgb(249,206,44)" fg:x="14652" fg:w="49"/><text x="86.9431%" y="222.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:107) (62 samples, 0.37%)</title><rect x="86.6339%" y="196" width="0.3668%" height="15" fill="rgb(251,153,30)" fg:x="14642" fg:w="62"/><text x="86.8839%" y="206.50"></text></g><g><title>_translate_key (pandas\_config\config.py:611) (24 samples, 0.14%)</title><rect x="87.0540%" y="212" width="0.1420%" height="15" fill="rgb(239,152,38)" fg:x="14713" fg:w="24"/><text x="87.3040%" y="222.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:109) (36 samples, 0.21%)</title><rect x="87.0008%" y="196" width="0.2130%" height="15" fill="rgb(249,139,47)" fg:x="14704" fg:w="36"/><text x="87.2508%" y="206.50"></text></g><g><title>_get_option (pandas\_config\config.py:115) (149 samples, 0.88%)</title><rect x="86.4978%" y="180" width="0.8816%" height="15" fill="rgb(244,64,35)" fg:x="14619" fg:w="149"/><text x="86.7478%" y="190.50"></text></g><g><title>_get_single_key (pandas\_config\config.py:97) (27 samples, 0.16%)</title><rect x="87.2197%" y="196" width="0.1598%" height="15" fill="rgb(216,46,15)" fg:x="14741" fg:w="27"/><text x="87.4697%" y="206.50"></text></g><g><title>_get_root (pandas\_config\config.py:566) (20 samples, 0.12%)</title><rect x="87.4504%" y="196" width="0.1183%" height="15" fill="rgb(250,74,19)" fg:x="14780" fg:w="20"/><text x="87.7004%" y="206.50"></text></g><g><title>_get_root (pandas\_config\config.py:568) (22 samples, 0.13%)</title><rect x="87.5688%" y="196" width="0.1302%" height="15" fill="rgb(249,42,33)" fg:x="14800" fg:w="22"/><text x="87.8188%" y="206.50"></text></g><g><title>_get_option (pandas\_config\config.py:118) (74 samples, 0.44%)</title><rect x="87.3794%" y="180" width="0.4378%" height="15" fill="rgb(242,149,17)" fg:x="14768" fg:w="74"/><text x="87.6294%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:441) (294 samples, 1.74%)</title><rect x="86.2020%" y="148" width="1.7395%" height="15" fill="rgb(244,29,21)" fg:x="14569" fg:w="294"/><text x="86.4520%" y="158.50"></text></g><g><title>__call__ (pandas\_config\config.py:243) (265 samples, 1.57%)</title><rect x="86.3736%" y="164" width="1.5680%" height="15" fill="rgb(220,130,37)" fg:x="14598" fg:w="265"/><text x="86.6236%" y="174.50"></text></g><g><title>_get_option (pandas\_config\config.py:119) (21 samples, 0.12%)</title><rect x="87.8173%" y="180" width="0.1243%" height="15" fill="rgb(211,67,2)" fg:x="14842" fg:w="21"/><text x="88.0673%" y="190.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1929) (31 samples, 0.18%)</title><rect x="88.5569%" y="180" width="0.1834%" height="15" fill="rgb(235,68,52)" fg:x="14967" fg:w="31"/><text x="88.8069%" y="190.50"></text></g><g><title>extract_pandas_array (pandas\core\internals\blocks.py:1990) (24 samples, 0.14%)</title><rect x="88.7995%" y="196" width="0.1420%" height="15" fill="rgb(246,142,3)" fg:x="15008" fg:w="24"/><text x="89.0495%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1931) (43 samples, 0.25%)</title><rect x="88.7403%" y="180" width="0.2544%" height="15" fill="rgb(241,25,7)" fg:x="14998" fg:w="43"/><text x="88.9903%" y="190.50"></text></g><g><title>check_ndim (pandas\core\internals\blocks.py:1966) (22 samples, 0.13%)</title><rect x="89.0894%" y="196" width="0.1302%" height="15" fill="rgb(242,119,39)" fg:x="15057" fg:w="22"/><text x="89.3394%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1932) (61 samples, 0.36%)</title><rect x="88.9947%" y="180" width="0.3609%" height="15" fill="rgb(241,98,45)" fg:x="15041" fg:w="61"/><text x="89.2447%" y="190.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1900) (53 samples, 0.31%)</title><rect x="89.4326%" y="196" width="0.3136%" height="15" fill="rgb(254,28,30)" fg:x="15115" fg:w="53"/><text x="89.6826%" y="206.50"></text></g><g><title>is_sparse (pandas\core\dtypes\common.py:232) (82 samples, 0.49%)</title><rect x="89.8882%" y="212" width="0.4852%" height="15" fill="rgb(241,142,54)" fg:x="15192" fg:w="82"/><text x="90.1382%" y="222.50"></text></g><g><title>get_block_type (pandas\core\internals\blocks.py:1906) (103 samples, 0.61%)</title><rect x="89.8527%" y="196" width="0.6094%" height="15" fill="rgb(222,85,15)" fg:x="15186" fg:w="103"/><text x="90.1027%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1935) (213 samples, 1.26%)</title><rect x="89.3852%" y="180" width="1.2603%" height="15" fill="rgb(210,85,47)" fg:x="15107" fg:w="213"/><text x="89.6352%" y="190.50"></text></g><g><title>extract_array (pandas\core\construction.py:417) (57 samples, 0.34%)</title><rect x="90.7698%" y="212" width="0.3373%" height="15" fill="rgb(224,206,25)" fg:x="15341" fg:w="57"/><text x="91.0198%" y="222.50"></text></g><g><title>_check (pandas\core\dtypes\generic.py:45) (20 samples, 0.12%)</title><rect x="90.9887%" y="228" width="0.1183%" height="15" fill="rgb(243,201,19)" fg:x="15378" fg:w="20"/><text x="91.2387%" y="238.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1870) (86 samples, 0.51%)</title><rect x="90.6869%" y="196" width="0.5088%" height="15" fill="rgb(236,59,4)" fg:x="15327" fg:w="86"/><text x="90.9369%" y="206.50"></text></g><g><title>maybe_coerce_values (pandas\core\internals\blocks.py:1873) (35 samples, 0.21%)</title><rect x="91.2668%" y="196" width="0.2071%" height="15" fill="rgb(254,179,45)" fg:x="15425" fg:w="35"/><text x="91.5168%" y="206.50"></text></g><g><title>new_block (pandas\core\internals\blocks.py:1937) (164 samples, 0.97%)</title><rect x="90.6455%" y="180" width="0.9704%" height="15" fill="rgb(226,14,10)" fg:x="15320" fg:w="164"/><text x="90.8955%" y="190.50"></text></g><g><title>from_array (pandas\core\internals\managers.py:1574) (640 samples, 3.79%)</title><rect x="88.1250%" y="164" width="3.7868%" height="15" fill="rgb(244,27,41)" fg:x="14894" fg:w="640"/><text x="88.3750%" y="174.50">from..</text></g><g><title>new_block (pandas\core\internals\blocks.py:1938) (50 samples, 0.30%)</title><rect x="91.6159%" y="180" width="0.2958%" height="15" fill="rgb(235,35,32)" fg:x="15484" fg:w="50"/><text x="91.8659%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:443) (733 samples, 4.34%)</title><rect x="87.9593%" y="148" width="4.3370%" height="15" fill="rgb(218,68,31)" fg:x="14866" fg:w="733"/><text x="88.2093%" y="158.50">__ini..</text></g><g><title>from_array (pandas\core\internals\managers.py:1575) (65 samples, 0.38%)</title><rect x="91.9117%" y="164" width="0.3846%" height="15" fill="rgb(207,120,37)" fg:x="15534" fg:w="65"/><text x="92.1617%" y="174.50"></text></g><g><title>__init__ (pandas\core\generic.py:241) (34 samples, 0.20%)</title><rect x="92.4797%" y="164" width="0.2012%" height="15" fill="rgb(227,98,0)" fg:x="15630" fg:w="34"/><text x="92.7297%" y="174.50"></text></g><g><title>__init__ (pandas\core\series.py:447) (167 samples, 0.99%)</title><rect x="92.2963%" y="148" width="0.9881%" height="15" fill="rgb(207,7,3)" fg:x="15599" fg:w="167"/><text x="92.5463%" y="158.50"></text></g><g><title>__init__ (pandas\core\generic.py:249) (67 samples, 0.40%)</title><rect x="92.8880%" y="164" width="0.3964%" height="15" fill="rgb(206,98,19)" fg:x="15699" fg:w="67"/><text x="93.1380%" y="174.50"></text></g><g><title>__init__ (pandas\core\flags.py:49) (24 samples, 0.14%)</title><rect x="93.1424%" y="180" width="0.1420%" height="15" fill="rgb(217,5,26)" fg:x="15742" fg:w="24"/><text x="93.3924%" y="190.50"></text></g><g><title>__getattr__ (pandas\core\generic.py:5481) (22 samples, 0.13%)</title><rect x="93.8998%" y="196" width="0.1302%" height="15" fill="rgb(235,190,38)" fg:x="15870" fg:w="22"/><text x="94.1498%" y="206.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5499) (128 samples, 0.76%)</title><rect x="93.4146%" y="164" width="0.7574%" height="15" fill="rgb(247,86,24)" fg:x="15788" fg:w="128"/><text x="93.6646%" y="174.50"></text></g><g><title>name (pandas\core\series.py:625) (85 samples, 0.50%)</title><rect x="93.6690%" y="180" width="0.5029%" height="15" fill="rgb(205,101,16)" fg:x="15831" fg:w="85"/><text x="93.9190%" y="190.50"></text></g><g><title>__getattr__ (pandas\core\generic.py:5487) (24 samples, 0.14%)</title><rect x="94.0299%" y="196" width="0.1420%" height="15" fill="rgb(246,168,33)" fg:x="15892" fg:w="24"/><text x="94.2799%" y="206.50"></text></g><g><title>validate_all_hashable (pandas\core\dtypes\common.py:1737) (69 samples, 0.41%)</title><rect x="94.7163%" y="196" width="0.4083%" height="15" fill="rgb(231,114,1)" fg:x="16008" fg:w="69"/><text x="94.9663%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\dtypes\common.py:1737) (35 samples, 0.21%)</title><rect x="94.9175%" y="212" width="0.2071%" height="15" fill="rgb(207,184,53)" fg:x="16042" fg:w="35"/><text x="95.1675%" y="222.50"></text></g><g><title>name (pandas\core\series.py:629) (110 samples, 0.65%)</title><rect x="94.4796%" y="180" width="0.6508%" height="15" fill="rgb(224,95,51)" fg:x="15968" fg:w="110"/><text x="94.7296%" y="190.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5509) (150 samples, 0.89%)</title><rect x="94.3554%" y="164" width="0.8875%" height="15" fill="rgb(212,188,45)" fg:x="15947" fg:w="150"/><text x="94.6054%" y="174.50"></text></g><g><title>name (pandas\core\series.py:630) (19 samples, 0.11%)</title><rect x="95.1305%" y="180" width="0.1124%" height="15" fill="rgb(223,154,38)" fg:x="16078" fg:w="19"/><text x="95.3805%" y="190.50"></text></g><g><title>__init__ (pandas\core\series.py:448) (334 samples, 1.98%)</title><rect x="93.2844%" y="148" width="1.9762%" height="15" fill="rgb(251,22,52)" fg:x="15766" fg:w="334"/><text x="93.5344%" y="158.50">_..</text></g><g><title>xs (pandas\core\generic.py:3798) (2,473 samples, 14.63%)</title><rect x="80.9893%" y="132" width="14.6323%" height="15" fill="rgb(229,209,22)" fg:x="13688" fg:w="2473"/><text x="81.2393%" y="142.50">xs (pandas\core\generi..</text></g><g><title>__init__ (pandas\core\series.py:449) (61 samples, 0.36%)</title><rect x="95.2606%" y="148" width="0.3609%" height="15" fill="rgb(234,138,34)" fg:x="16100" fg:w="61"/><text x="95.5106%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\indexes\base.py:4600) (17 samples, 0.10%)</title><rect x="95.8286%" y="148" width="0.1006%" height="15" fill="rgb(212,95,11)" fg:x="16196" fg:w="17"/><text x="96.0786%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\indexes\base.py:4603) (36 samples, 0.21%)</title><rect x="95.9647%" y="148" width="0.2130%" height="15" fill="rgb(240,179,47)" fg:x="16219" fg:w="36"/><text x="96.2147%" y="158.50"></text></g><g><title>xs (pandas\core\generic.py:3801) (95 samples, 0.56%)</title><rect x="95.6985%" y="132" width="0.5621%" height="15" fill="rgb(240,163,11)" fg:x="16174" fg:w="95"/><text x="95.9485%" y="142.50"></text></g><g><title>is_view (pandas\core\internals\managers.py:493) (17 samples, 0.10%)</title><rect x="96.6038%" y="164" width="0.1006%" height="15" fill="rgb(236,37,12)" fg:x="16327" fg:w="17"/><text x="96.8538%" y="174.50"></text></g><g><title>is_view (pandas\core\internals\blocks.py:174) (17 samples, 0.10%)</title><rect x="96.8700%" y="180" width="0.1006%" height="15" fill="rgb(232,164,16)" fg:x="16372" fg:w="17"/><text x="97.1200%" y="190.50"></text></g><g><title>_is_view (pandas\core\generic.py:4007) (86 samples, 0.51%)</title><rect x="96.5091%" y="148" width="0.5088%" height="15" fill="rgb(244,205,15)" fg:x="16311" fg:w="86"/><text x="96.7591%" y="158.50"></text></g><g><title>is_view (pandas\core\internals\managers.py:494) (53 samples, 0.31%)</title><rect x="96.7043%" y="164" width="0.3136%" height="15" fill="rgb(223,117,47)" fg:x="16344" fg:w="53"/><text x="96.9543%" y="174.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:5499) (17 samples, 0.10%)</title><rect x="97.1422%" y="164" width="0.1006%" height="15" fill="rgb(244,107,35)" fg:x="16418" fg:w="17"/><text x="97.3922%" y="174.50"></text></g><g><title>xs (pandas\core\generic.py:3814) (177 samples, 1.05%)</title><rect x="96.2724%" y="132" width="1.0473%" height="15" fill="rgb(205,140,8)" fg:x="16271" fg:w="177"/><text x="96.5224%" y="142.50"></text></g><g><title>_set_is_copy (pandas\core\generic.py:3843) (46 samples, 0.27%)</title><rect x="97.0475%" y="148" width="0.2722%" height="15" fill="rgb(228,84,46)" fg:x="16402" fg:w="46"/><text x="97.2975%" y="158.50"></text></g><g><title>__getitem__ (pandas\core\indexing.py:931) (6,253 samples, 37.00%)</title><rect x="60.3278%" y="84" width="36.9978%" height="15" fill="rgb(254,188,9)" fg:x="10196" fg:w="6253"/><text x="60.5778%" y="94.50">__getitem__ (pandas\core\indexing.py:931)</text></g><g><title>_getitem_axis (pandas\core\indexing.py:1164) (5,938 samples, 35.13%)</title><rect x="62.1916%" y="100" width="35.1340%" height="15" fill="rgb(206,112,54)" fg:x="10511" fg:w="5938"/><text x="62.4416%" y="110.50">_getitem_axis (pandas\core\indexing.py:1164)</text></g><g><title>_get_label (pandas\core\indexing.py:1113) (5,913 samples, 34.99%)</title><rect x="62.3395%" y="116" width="34.9861%" height="15" fill="rgb(216,84,49)" fg:x="10536" fg:w="5913"/><text x="62.5895%" y="126.50">_get_label (pandas\core\indexing.py:1113)</text></g><g><title>__getitem__ (pandas\core\series.py:929) (30 samples, 0.18%)</title><rect x="97.3256%" y="84" width="0.1775%" height="15" fill="rgb(214,194,35)" fg:x="16449" fg:w="30"/><text x="97.5756%" y="94.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5700) (26 samples, 0.15%)</title><rect x="98.0711%" y="132" width="0.1538%" height="15" fill="rgb(249,28,3)" fg:x="16575" fg:w="26"/><text x="98.3211%" y="142.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3359) (62 samples, 0.37%)</title><rect x="97.9942%" y="116" width="0.3668%" height="15" fill="rgb(222,56,52)" fg:x="16562" fg:w="62"/><text x="98.2442%" y="126.50"></text></g><g><title>_maybe_cast_indexer (pandas\core\indexes\base.py:5701) (23 samples, 0.14%)</title><rect x="98.2250%" y="132" width="0.1361%" height="15" fill="rgb(245,217,50)" fg:x="16601" fg:w="23"/><text x="98.4750%" y="142.50"></text></g><g><title>_get_value (pandas\core\series.py:1051) (169 samples, 1.00%)</title><rect x="97.8108%" y="100" width="0.9999%" height="15" fill="rgb(213,201,24)" fg:x="16531" fg:w="169"/><text x="98.0608%" y="110.50"></text></g><g><title>get_loc (pandas\core\indexes\base.py:3361) (73 samples, 0.43%)</title><rect x="98.3788%" y="116" width="0.4319%" height="15" fill="rgb(248,116,28)" fg:x="16627" fg:w="73"/><text x="98.6288%" y="126.50"></text></g><g><title>__getitem__ (pandas\core\series.py:942) (294 samples, 1.74%)</title><rect x="97.6984%" y="84" width="1.7395%" height="15" fill="rgb(219,72,43)" fg:x="16512" fg:w="294"/><text x="97.9484%" y="94.50"></text></g><g><title>_get_value (pandas\core\series.py:1052) (106 samples, 0.63%)</title><rect x="98.8107%" y="100" width="0.6272%" height="15" fill="rgb(209,138,14)" fg:x="16700" fg:w="106"/><text x="99.0607%" y="110.50"></text></g><g><title>_get_values_for_loc (pandas\core\indexes\base.py:5184) (75 samples, 0.44%)</title><rect x="98.9941%" y="116" width="0.4438%" height="15" fill="rgb(222,18,33)" fg:x="16731" fg:w="75"/><text x="99.2441%" y="126.50"></text></g><g><title>_values (pandas\core\series.py:706) (51 samples, 0.30%)</title><rect x="99.1361%" y="132" width="0.3018%" height="15" fill="rgb(213,199,7)" fg:x="16755" fg:w="51"/><text x="99.3861%" y="142.50"></text></g><g><title>internal_values (pandas\core\internals\managers.py:1676) (35 samples, 0.21%)</title><rect x="99.2308%" y="148" width="0.2071%" height="15" fill="rgb(250,110,10)" fg:x="16771" fg:w="35"/><text x="99.4808%" y="158.50"></text></g><g><title>&lt;module&gt; (Best_MA.py:47) (6,823 samples, 40.37%)</title><rect x="59.1563%" y="68" width="40.3704%" height="15" fill="rgb(248,123,6)" fg:x="9998" fg:w="6823"/><text x="59.4063%" y="78.50">&lt;module&gt; (Best_MA.py:47)</text></g><g><title>&lt;module&gt; (Best_MA.py:49) (32 samples, 0.19%)</title><rect x="99.5267%" y="68" width="0.1893%" height="15" fill="rgb(206,91,31)" fg:x="16821" fg:w="32"/><text x="99.7767%" y="78.50"></text></g><g><title>all (16,901 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="16901"/><text x="0.2500%" y="62.50"></text></g></svg></svg>